const E3 = require('./codecs');

const dids = {
    'e380':
    {
        0x250: new E3.O3EComplexType(8, 'GridActivePower', [new E3.O3EInt16(2, 'L1', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'L2', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'L3', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'Total', {scale:1.0, signed:true})]),
        0x252: new E3.O3EComplexType(8, 'GridReactivePower', [new E3.O3EInt16(2, 'L1', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'L2', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'L3', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'Total', {scale:1.0, signed:true})]),
        0x254: new E3.O3EComplexType(8, 'GridCurrent', [new E3.O3EInt16(2, 'L1', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'L2', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'L3', {scale:1.0, signed:true}), new E3.O3EcosPhi(2, 'cosPhi', {offset:0, scale:100.0})]),
        0x256: new E3.O3EComplexType(8, 'GridVoltage', [new E3.O3EInt16(2, 'L1', {scale:1.0, signed:false}), new E3.O3EInt16(2, 'L2', {scale:1.0, signed:false}), new E3.O3EInt16(2, 'L3', {scale:1.0, signed:false}), new E3.O3EInt16(2, 'Frequency', {scale:100.0, signed:false})]),
        0x258: new E3.O3EComplexType(8, 'GridEnergy', [new E3.O3EInt32(4, 'ImportCumulated', {scale:2000.0, signed:false}), new E3.O3EInt32(4, 'ExportCumulated', {scale:2000.0, signed:false})]),  // Cumulated import and export (kWh)
        0x25A: new E3.O3EComplexType(8, 'GridPower', [new E3.O3EInt32(4, 'ActivePower', {scale:10.0, signed:true}), new E3.O3EInt32(4, 'ReactivePower', {scale:10.0, signed:true})]),
        0x25C: new E3.O3EComplexType(4, 'GridEnergy', [new E3.O3EInt32(4, 'ImportCumulated', {scale:100, signed:false})])    // Cumulated import (kWh)
    },
    'common' :
    {
        256 : new E3.O3EComplexType(36, 'BusIdentification', [new E3.O3EByteVal(1, 'BusAddress'), new E3.O3EEnum(1, 'BusType', 'BusTypes'), new E3.O3EEnum(1, 'DeviceProperty','Devices'), new E3.O3EEnum(1, 'DeviceFunction','Devices'), new E3.O3ESoftVers(8, 'SW-Version'), new E3.O3ESoftVers(8, 'HW-Version'), new E3.O3EUtf8(16, 'VIN')]),
        257 : new E3.O3EList(122, 'StatusDtcList', [new E3.O3EByteVal(2, 'Count'), new E3.O3EComplexType(12, 'ListEntries',[new E3.O3EEnum(2,'State','States'), new E3.O3EDateTime(8, 'DateTime'),new E3.O3EByteVal(2, 'Unknown')] )]),
        258 : new E3.O3EList(122, 'StatusDtcHistory', [new E3.O3EByteVal(2, 'Count'), new E3.O3EComplexType(12, 'ListEntries',[new E3.O3EEnum(2,'State','States'), new E3.O3EDateTime(8, 'DateTime'),new E3.O3EByteVal(2, 'Unknown')] )]),
        259 : new E3.O3EList(122, 'InfoDtcList', [new E3.O3EByteVal(2, 'Count'), new E3.O3EComplexType(12, 'ListEntries',[new E3.O3EEnum(2,'Info','Infos'), new E3.O3EDateTime(8, 'DateTime'),new E3.O3EByteVal(2, 'Unknown')] )]),
        260 : new E3.O3EList(122, 'InfoDtcHistory', [new E3.O3EByteVal(2, 'Count'), new E3.O3EComplexType(12, 'ListEntries',[new E3.O3EEnum(2,'Info','Infos'), new E3.O3EDateTime(8, 'DateTime'),new E3.O3EByteVal(2, 'Unknown')] )]),
        261 : new E3.O3EList(122, 'ServiceDtcList', [new E3.O3EByteVal(2, 'Count'), new E3.O3EComplexType(12, 'ListEntries',[new E3.O3EEnum(2,'Service','Services'), new E3.O3EDateTime(8, 'DateTime'),new E3.O3EByteVal(2, 'Unknown')] )]),
        262 : new E3.O3EList(122, 'ServiceDtcHistory', [new E3.O3EByteVal(2, 'Count'), new E3.O3EComplexType(12, 'ListEntries',[new E3.O3EEnum(2,'Service','Services'), new E3.O3EDateTime(8, 'DateTime'),new E3.O3EByteVal(2, 'Unknown')] )]),
        263 : new E3.O3EList(122, 'WarningDtcList', [new E3.O3EByteVal(2, 'Count'), new E3.O3EComplexType(12, 'ListEntries',[new E3.O3EEnum(2,'Warning','Warnings'), new E3.O3EDateTime(8, 'DateTime'),new E3.O3EByteVal(2, 'Unknown')] )]),
        264 : new E3.O3EList(124, 'WarningDtcHistory', [new E3.O3EByteVal(2, 'Count'), new E3.O3EByteVal(2, 'GrandTotal'), new E3.O3EComplexType(12, 'ListEntries',[new E3.O3EEnum(2,'Warning','Warnings'), new E3.O3EDateTime(8, 'DateTime'),new E3.O3EByteVal(2, 'Unknown')] )]),
        265 : new E3.O3EList(122, 'ErrorDtcList', [new E3.O3EByteVal(2, 'Count'), new E3.O3EComplexType(12, 'ListEntries',[new E3.O3EEnum(2,'Error','Errors'), new E3.O3EDateTime(8, 'DateTime'), new E3.O3EByteVal(2, 'Unknown')] )]),
        266 : new E3.O3EList(124, 'ErrorDtcHistory', [new E3.O3EByteVal(2, 'Count'), new E3.O3EByteVal(2, 'GrandTotal'), new E3.O3EComplexType(12, 'ListEntries',[new E3.O3EEnum(2,'Error','Errors'), new E3.O3EDateTime(8, 'DateTime'), new E3.O3EByteVal(2, 'Unknown')] )]),
        268 : new E3.O3EComplexType(9, 'FlowTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        269 : new E3.O3EComplexType(9, 'ReturnTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        271 : new E3.O3EComplexType(9, 'DomesticHotWaterSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true})]),
        272 : new E3.O3ERawCodec(10, 'DomesticHotWaterFlowSensor'),
        273 : new E3.O3EInt16(9, 'SolarRoofTemperatureSensor', {signed:true}),
        274 : new E3.O3EComplexType(9, 'OutsideTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        275 : new E3.O3EComplexType(9, 'SolarBottomTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        277 : new E3.O3EComplexType(9, 'BufferBottomTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        278 : new E3.O3EComplexType(9, 'BufferMidBottomTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        279 : new E3.O3EComplexType(9, 'BufferMidTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        281 : new E3.O3EComplexType(9, 'BufferTopTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        282 : new E3.O3EComplexType(9, 'HydraulicSeparatorTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        283 : new E3.O3EComplexType(9, 'HydraulicSeparatorReturnTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        284 : new E3.O3EComplexType(9, 'MixerOneCircuitFlowTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        285 : new E3.O3EComplexType(9, 'MixerOneCircuitReturnTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        286 : new E3.O3EComplexType(9, 'MixerTwoCircuitFlowTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        287 : new E3.O3EComplexType(9, 'MixerTwoCircuitReturnTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        288 : new E3.O3EComplexType(9, 'MixerThreeCircuitFlowTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        289 : new E3.O3EComplexType(9, 'MixerThreeCircuitReturnTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        290 : new E3.O3EComplexType(9, 'MixerFourCircuitFlowTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        291 : new E3.O3EComplexType(9, 'MixerFourCircuitReturnTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        318 : new E3.O3EComplexType(9, 'WaterPressureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        320 : new E3.O3EComplexType(9, 'PrimaryHeatExchangerLiquidTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        321 : new E3.O3EComplexType(9, 'CompressorInletTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        322 : new E3.O3EComplexType(9, 'CompressorInletPressureSensor', [new E3.O3EInt16(2, 'Actual', {scale:100}), new E3.O3EInt16(2, 'Minimum', {scale:100}), new E3.O3EInt16(2, 'Maximum', {scale:100}), new E3.O3EInt16(2, 'Average', {scale:100}), new E3.O3EByteVal(1, 'Unknown')]),
        324 : new E3.O3EComplexType(9, 'CompressorOutletTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        325 : new E3.O3EComplexType(9, 'CompressorOutletPressureSensor', [new E3.O3EInt16(2, 'Actual', {scale:100}), new E3.O3EInt16(2, 'Minimum', {scale:100}), new E3.O3EInt16(2, 'Maximum', {scale:100}), new E3.O3EInt16(2, 'Average', {scale:100}), new E3.O3EByteVal(1, 'Unknown')]),
        327 : new E3.O3EComplexType(9, 'OutdoorAirTemperatureSensor',[new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Error')]),
        328 : new E3.O3EComplexType(9, 'SupplyAirTemperatureSensor',[new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Error')]),
        329 : new E3.O3EComplexType(9, 'ExtractAirTemperatureSensor',[new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Error')]),
        330 : new E3.O3EComplexType(9, 'ExhaustAirTemperatureSensor',[new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Error')]),
        331 : new E3.O3EComplexType(9, 'FlueGasTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true})]),
        323 : new E3.O3ERawCodec(9, 'EnhancedVapourInjectionTemperatureSensor'),
        334 : new E3.O3EComplexType(9, 'MixerOneCircuitRoomTemperatureSensor',[new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Error')]),
        335 : new E3.O3EComplexType(9, 'MixerTwoCircuitRoomTemperatureSensor',[new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Error')]),
        336 : new E3.O3EComplexType(9, 'MixerThreeCircuitRoomTemperatureSensor',[new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Error')]),
        337 : new E3.O3EComplexType(9, 'MixerFourCircuitRoomTemperatureSensor',[new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Error')]),
        354 : new E3.O3EByteVal(1, 'PrimaryHeatExchangerBaseHeater'),
        355 : new E3.O3EComplexType(9, 'SecondaryHeatExchangerLiquidTemperatureSensor',[new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Error')]),
        360 : new E3.O3EComplexType(9, 'DomesticHotWaterOutletSensor',[new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Error')]),
        364 : new E3.O3EInt8(6, 'Flame'),
        365 : new E3.O3EInt16(42, 'FlameStatistical', {offset:38, scale:1}),
        373 : new E3.O3ERawCodec(2, 'FanTargetSpeed'),
        377 : new E3.O3EUtf8(16, 'ViessmannIdentificationNumber'),
        378 : new E3.O3EComplexType(4, 'PointOfCommonCouplingPhaseOne', [new E3.O3EInt16(2, 'ActivePower', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'ReactivePower', {scale:1.0, signed:true})]),
        379 : new E3.O3EComplexType(4, 'PointOfCommonCouplingPhaseTwo', [new E3.O3EInt16(2, 'ActivePower', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'ReactivePower', {scale:1.0, signed:true})]),
        380 : new E3.O3EComplexType(4, 'PointOfCommonCouplingPhaseThree', [new E3.O3EInt16(2, 'ActivePower', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'ReactivePower', {scale:1.0, signed:true})]),
        381 : new E3.O3EInt8(4, 'CentralHeatingPump', {offset:1}),
        382 : new E3.O3EComplexType(5, 'UnitsAndFormats', [new E3.O3EByteVal(1, 'Units'), new E3.O3EByteVal(1, 'DateFormat'), new E3.O3EByteVal(1, 'TimeFormat'), new E3.O3EByteVal(1, 'TimeZone')]),
        386 : new E3.O3EByteVal(1, 'DiverterValveTargetPosition'),
        388 : new E3.O3EInt8(1, 'ElectronicExpansionValveOneTargetPositionPercent'),
        389 : new E3.O3EInt8(1, 'ElectronicExpansionValveOneCurrentPositionPercent'),
        390 : new E3.O3EInt8(1, 'ElectronicExpansionValveTwoTargetPositionPercent'),
        391 : new E3.O3EInt8(1, 'ElectronicExpansionValveTwoCurrentPositionPercent'),
        392 : new E3.O3ERawCodec(4, 'DomesticHotWaterPump'),
        395 : new E3.O3EInt16(2, 'CentralHeatingTemperatureSetpoint'),
        396 : new E3.O3EInt16(2, 'DomesticHotWaterTemperatureSetpoint', {signed:true}),
        401 : new E3.O3EInt8(5, 'MixerOneCircuitPump', {scale:1, offset:2}),
        402 : new E3.O3EInt8(5, 'MixerTwoCircuitPump', {scale:1, offset:2}),
        403 : new E3.O3EInt8(5, 'MixerThreeCircuitPump', {scale:1, offset:2}),
        404 : new E3.O3EInt8(5, 'MixerFourCircuitPump', {scale:1, offset:2}),
        405 : new E3.O3EInt16(5, 'MixerFiveCircuitPump', {signed:true}),
        406 : new E3.O3EInt16(5, 'MixerSixCircuitPump', {signed:true}),
        407 : new E3.O3EInt16(5, 'MixerSevenCircuitPump', {signed:true}),
        408 : new E3.O3EInt16(5, 'MixerEightCircuitPump', {signed:true}),
        417 : new E3.O3EInt8(5, 'SolarCircuitPump'),
        419 : new E3.O3EComplexType(5, 'OutdoorAirHumiditySensor',[new E3.O3EByteVal(1, 'Actual'), new E3.O3EByteVal(1, 'Minimum'), new E3.O3EByteVal(1, 'Maximum'), new E3.O3EByteVal(1, 'Average'), new E3.O3EByteVal(1, 'Error')]),
        420 : new E3.O3EComplexType(5, 'SupplyAirHumiditySensor',[new E3.O3EByteVal(1, 'Actual'), new E3.O3EByteVal(1, 'Minimum'), new E3.O3EByteVal(1, 'Maximum'), new E3.O3EByteVal(1, 'Average'), new E3.O3EByteVal(1, 'Error')]),
        421 : new E3.O3EComplexType(5, 'ExtractAirHumiditySensor',[new E3.O3EByteVal(1, 'Actual'), new E3.O3EByteVal(1, 'Minimum'), new E3.O3EByteVal(1, 'Maximum'), new E3.O3EByteVal(1, 'Average'), new E3.O3EByteVal(1, 'Error')]),
        422 : new E3.O3EComplexType(5, 'ExhaustAirHumiditySensor',[new E3.O3EByteVal(1, 'Actual'), new E3.O3EByteVal(1, 'Minimum'), new E3.O3EByteVal(1, 'Maximum'), new E3.O3EByteVal(1, 'Average'), new E3.O3EByteVal(1, 'Error')]),
        424 : new E3.O3EComplexType(9, 'MixerOneCircuitRoomTemperatureSetpoint', [new E3.O3EInt16(2, 'Comfort', {signed:true}), new E3.O3EInt16(2, 'Standard', {signed:true}), new E3.O3EInt16(2, 'Reduced', {signed:true}), new E3.O3ERawCodec(2, '?2'), new E3.O3EByteVal(1, '?1')]),
        426 : new E3.O3EComplexType(9, 'MixerTwoCircuitRoomTemperatureSetpoint', [new E3.O3EInt16(2, 'Comfort', {signed:true}), new E3.O3EInt16(2, 'Standard', {signed:true}), new E3.O3EInt16(2, 'Reduced', {signed:true})]),
        428 : new E3.O3EComplexType(9, 'MixerThreeCircuitRoomTemperatureSetpoint', [new E3.O3EInt16(2, 'Comfort', {signed:true}), new E3.O3EInt16(2, 'Standard', {signed:true}), new E3.O3EInt16(2, 'Reduced', {signed:true})]),
        429 : new E3.O3ERawCodec(4, 'ElectricalPreHeater'),
        430 : new E3.O3EComplexType(9, 'MixerFourCircuitRoomTemperatureSetpoint', [new E3.O3EInt16(2, 'Comfort', {signed:true}), new E3.O3EInt16(2, 'Standard', {signed:true}), new E3.O3EInt16(2, 'Reduced', {signed:true})]),
        431 : new E3.O3EComplexType(9, 'SupplyAirVolumeFlowSensor',[new E3.O3EInt16(2, 'Zuluftvolumenstrom', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Error')]),
        432 : new E3.O3EComplexType(9, 'MixerFiveCircuitRoomTemperatureSetpoint', [new E3.O3EInt16(2, 'Comfort', {signed:true}), new E3.O3EInt16(2, 'Standard', {signed:true}), new E3.O3EInt16(2, 'Reduced', {signed:true})]),
        433 : new E3.O3EComplexType(9, 'ExhaustAirVolumeFlowSensor',[new E3.O3EInt16(2, 'Abluftvolumenstrom', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Error')]),
        434 : new E3.O3EComplexType(9, 'MixerSixCircuitRoomTemperatureSetpoint', [new E3.O3EInt16(2, 'Comfort', {signed:true}), new E3.O3EInt16(2, 'Standard', {signed:true}), new E3.O3EInt16(2, 'Reduced', {signed:true})]),
        435 : new E3.O3EComplexType(8, 'VentilationStageTargetVolumeFlow',[new E3.O3EInt16(2, 'Stage1', {scale:1.0}), new E3.O3EInt16(2, 'Stage2', {scale:1.0}), new E3.O3EInt16(2, 'Stage3', {scale:1.0}), new E3.O3EInt16(2, 'Stage4', {scale:1.0})]),
        436 : new E3.O3EComplexType(9, 'MixerSevenCircuitRoomTemperatureSetpoint', [new E3.O3EInt16(2, 'Comfort', {signed:true}), new E3.O3EInt16(2, 'Standard', {signed:true}), new E3.O3EInt16(2, 'Reduced', {signed:true})]),
        437 : new E3.O3EComplexType(2, 'BypassOperationState',[new E3.O3EByteVal(1, 'BypassStatus'), new E3.O3EByteVal(1, '?1')]),
        438 : new E3.O3EComplexType(9, 'MixerEightCircuitRoomTemperatureSetpoint', [new E3.O3EInt16(2, 'Comfort', {signed:true}), new E3.O3EInt16(2, 'Standard', {signed:true}), new E3.O3EInt16(2, 'Reduced', {signed:true})]),
        439 : new E3.O3EByteVal(1, 'BypassAvailableModes'),
        449 : new E3.O3ERawCodec(141, 'ElectricalEnergyMatrix'),
        451 : new E3.O3ERawCodec(4, 'ExternalAlternatingCurrentPowerSetpoint'),
        475 : new E3.O3ERawCodec(2, 'MixerOneCircuitThreeWayValvePositionPercent'),
        476 : new E3.O3EInt8(2,  'MixerTwoCircuitThreeWayValvePositionPercent', {signed:true}),
        477 : new E3.O3ERawCodec(2, 'MixerThreeCircuitThreeWayValvePositionPercent'),
        478 : new E3.O3ERawCodec(2, 'MixerFourCircuitThreeWayValvePositionPercent'),
        491 : new E3.O3ERawCodec(2, 'DomesticHotWaterCirculationPump'),
        497 : new E3.O3EInt16(5, 'DomesticHotWaterCirculationPumpMode', {signed:true}),
        500 : new E3.O3ERawCodec(2, 'CentralHeatDemandExternalAc'),
        503 : new E3.O3ERawCodec(2, 'ScaldProtection'),
        504 : new E3.O3ERawCodec(14, 'DomesticHotWaterSetpointMetaData'),
        505 : new E3.O3ESdate(3, 'Date'),
        506 : new E3.O3EStime(3, 'Time'),
        507 : new E3.O3EUtc(4, 'UniversalTimeCoordinated'),
        508 : new E3.O3EByteVal(1, 'UniversalTimeCoordinatedOffset'),
        510 : new E3.O3EByteVal(1, 'Language'),
        511 : new E3.O3ERawCodec(8, 'HolidayPhase'),
        512 : new E3.O3ERawCodec(8, 'HolidayAtHomePhase'),
        513 : new E3.O3ERawCodec(8, 'HolidayPhaseCircuitOne'),
        514 : new E3.O3ERawCodec(8, 'HolidayAtHomePhaseCircuitOne'),
        515 : new E3.O3ERawCodec(8, 'HolidayPhaseCircuitTwo'),
        516 : new E3.O3ERawCodec(8, 'HolidayAtHomePhaseCircuitTwo'),
        517 : new E3.O3ERawCodec(8, 'HolidayPhaseCircuitThree'),
        518 : new E3.O3ERawCodec(8, 'HolidayAtHomePhaseCircuitThree'),
        519 : new E3.O3ERawCodec(8, 'HolidayPhaseCircuitFour'),
        520 : new E3.O3ERawCodec(8, 'HolidayAtHomePhaseCircuitFour'),
        521 : new E3.O3EInt16(2, 'OperatingHoursTillService', {scale:1.0}),
        522 : new E3.O3EComplexType(4, 'ServiceDateNext',[new E3.O3ESdate(3, 'Date'), new E3.O3EByteVal(1, 'Status')]),
        523 : new E3.O3EComplexType(3, 'ServiceDateLast',[new E3.O3ESdate(3, 'Date')]),
        524 : new E3.O3ERawCodec(2, 'ModulationTargetSetpoint'),
        525 : new E3.O3ERawCodec(2, 'ExternalModulationSetpoint'),
        526 : new E3.O3EInt16(2, 'ModulationCurrentValue'),
        527 : new E3.O3EInt16(2, 'FlowTemperatureTargetSetpoint', {signed:true}),
        528 : new E3.O3ERawCodec(2, 'ExternalTargetFlowTemperatureSetpoint'),
        531 : new E3.O3EComplexType(2, 'DomesticHotWaterOperationState',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        533 : new E3.O3EComplexType(2, 'VentilationTargetOperationLevel',[new E3.O3EByteVal(1, 'Acutual'), new E3.O3EByteVal(1, '?1')]),
        534 : new E3.O3ERawCodec(2, 'DomesticHotWaterPumpPostRunTime'),
        535 : new E3.O3ERawCodec(12, 'ObjectElectricalEnergyStatistical'),
        537 : new E3.O3EComplexType(2, 'ExternalMixerOneCircuitTargetOperationMode',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        538 : new E3.O3EComplexType(2, 'ExternalDomesticHotWaterTargetOperationMode',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        543 : new E3.O3ERawCodec(4, 'SmartGridReadyConsolidator'),
        544 : new E3.O3EComplexType(12, 'GasConsumptionCentralHeating', [new E3.O3EInt16(2, 'Today'), new E3.O3EInt16(2, 'Week'), new E3.O3EInt16(2, 'CurrentMonth'), new E3.O3EInt16(2, 'PastMonth'), new E3.O3EInt16(2, 'CurrentYear'), new E3.O3EInt16(2, 'PastYear')]),
        545 : new E3.O3EComplexType(12, 'GasConsumptionDomesticHotWater', [new E3.O3EInt16(2, 'Today'), new E3.O3EInt16(2, 'Week'), new E3.O3EInt16(2, 'CurrentMonth'), new E3.O3EInt16(2, 'PastMonth'), new E3.O3EInt16(2, 'CurrentYear'), new E3.O3EInt16(2, 'PastYear')]),
        548 : new E3.O3ERawCodec(24, 'EnergyConsumptionCentralHeating'),
        565 : new E3.O3ERawCodec(24, 'EnergyConsumptionDomesticHotWater'),
        566 : new E3.O3ERawCodec(24, 'EnergyConsumptionCooling'),
        567 : new E3.O3ERawCodec(24, 'GeneratedElectricity'),
        568 : new E3.O3ERawCodec(24, 'CoTwoSavings'),
        569 : new E3.O3EByteVal(1, 'ResetSensorMinMaxAverageStatistics'),
        570 : new E3.O3ERawCodec(1, 'ResetStatistics'),
        572 : new E3.O3ERawCodec(3, 'SetDefaultValuesDate'),
        573 : new E3.O3ERawCodec(2, 'RemoteReset'),
        575 : new E3.O3EInt8(1, 'SetDeliveryStatus'),
        576 : new E3.O3ESdate(3, 'SetDeliveryStatusDate'),
        580 : new E3.O3ESoftVers(8, 'SoftwareVersion'),
        581 : new E3.O3ESoftVers(8, 'HardwareVersion'),
        589 : new E3.O3EInt32(4, 'VentilationOperationHours', {scale:1.0}),
        592 : new E3.O3EMacAddr(6, 'MacAddressLan'),
        593 : new E3.O3EMacAddr(6, 'GatewayMac'),
        596 : new E3.O3ERawCodec(1, 'CentralHeatingPartLoadPercent'),
        597 : new E3.O3EInt8(1, 'DomesticHotWaterPartLoadPercent', {scale:1}),
        600 : new E3.O3ERawCodec(3, 'FuelCellReset'),
        602 : new E3.O3EByteVal(1, 'GatewayRemoteLocalNetworkStatus'),
        603 : new E3.O3EByteVal(1, 'GatewayApEnable'),
        604 : new E3.O3EComplexType(76, 'GatewayApDataSet', [new E3.O3EUtf8(32, 'SSID_AccessPoint'), new E3.O3EUtf8(40, 'Password_AccessPoint'), new E3.O3EIp4Addr(4, 'IP-Address_AccessPoint')]),
        607 : new E3.O3EComplexType(20, 'GatewayRemoteIp', [new E3.O3EIp4Addr(4, 'WLAN_IP-Address'), new E3.O3EIp4Addr(4, 'SubnetMask'), new E3.O3EIp4Addr(4, 'Gateway_IP-Address'), new E3.O3EIp4Addr(4, 'DNSServer1'), new E3.O3EIp4Addr(4, 'DNSServer2')]),
        609 : new E3.O3ERawCodec(40, 'ProxyServer'),
        610 : new E3.O3ERawCodec(2, 'ProxyPort'),
        611 : new E3.O3ERawCodec(40, 'ProxyUser'),
        613 : new E3.O3EByteVal(1, 'ProxyEnabled'),
        616 : new E3.O3EByteVal(1, 'GatewayRemoteEnable'),
        617 : new E3.O3ERawCodec(72, 'GatewayRemoteSsid'),
        618 : new E3.O3EByteVal(1, 'GatewayRemoteIpStatic'),
        619 : new E3.O3ERawCodec(2, 'GatewayRemoteScanNetwork'),
        620 : new E3.O3EByteVal(1, 'DiagnosticServiceConnectionStatus'),
        621 : new E3.O3EComplexType(181, 'ObjectContactDetails', [new E3.O3EUtf8(20, 'Name'), new E3.O3EUtf8(15, 'PreName'), new E3.O3EUtf8(20, 'Street'), new E3.O3EUtf8(10, 'StreetExtension'), new E3.O3EUtf8(7, 'ZipCode'), new E3.O3EUtf8(15, 'Region'), new E3.O3EUtf8(15, 'City'), new E3.O3EUtf8(16, 'Phone'), new E3.O3EUtf8(16, 'Mobile'), new E3.O3EUtf8(30, 'Email'), new E3.O3EEnum(1, 'Country', 'Countries'), new E3.O3EUtf8(16, 'IdentificationNumber')]),
        622 : new E3.O3EComplexType(181, 'CustomerDetails', [new E3.O3EUtf8(20, 'Name'), new E3.O3EUtf8(15, 'PreName'), new E3.O3EUtf8(20, 'Street'), new E3.O3EUtf8(10, 'StreetExtension'), new E3.O3EUtf8(7, 'ZipCode'), new E3.O3EUtf8(15, 'Region'), new E3.O3EUtf8(15, 'City'), new E3.O3EUtf8(16, 'Phone'), new E3.O3EUtf8(16, 'Mobile'), new E3.O3EUtf8(30, 'Email'), new E3.O3EEnum(1, 'Country', 'Countries'), new E3.O3EUtf8(16, 'Identification Number')]),
        623 : new E3.O3EComplexType(181, 'ServiceEngineer', [new E3.O3EUtf8(20, 'Name'), new E3.O3EUtf8(15, 'PreName'), new E3.O3EUtf8(20, 'Street'), new E3.O3EUtf8(10, 'StreetExtension'), new E3.O3EUtf8(7, 'ZipCode'), new E3.O3EUtf8(15, 'Region'), new E3.O3EUtf8(15, 'City'), new E3.O3EUtf8(16, 'Phone'), new E3.O3EUtf8(16, 'Mobile'), new E3.O3EUtf8(30, 'Email'), new E3.O3EEnum(1, 'Country', 'Countries'), new E3.O3EUtf8(16, 'Identification Number')]),
        624 : new E3.O3EComplexType(181, 'TechnicalSupport', [new E3.O3EUtf8(20, 'Name'), new E3.O3EUtf8(15, 'PreName'), new E3.O3EUtf8(20, 'Street'), new E3.O3EUtf8(10, 'StreetExtension'), new E3.O3EUtf8(7, 'ZipCode'), new E3.O3EUtf8(15, 'Region'), new E3.O3EUtf8(15, 'City'), new E3.O3EUtf8(16, 'Phone'), new E3.O3EUtf8(16, 'Mobile'), new E3.O3EUtf8(30, 'Email'), new E3.O3EEnum(1, 'Country', 'Countries'), new E3.O3EUtf8(16, 'Identification Number')]),
        625 : new E3.O3EComplexType(26, 'ObjectDetails', [new E3.O3EInt32(4, 'Latitude', {scale:10000, signed:true}), new E3.O3EInt32(4, 'Longitude', {scale:10000, signed:true}), new E3.O3EInt16(2, 'Altitude', {scale:1, signed:true}), new E3.O3EInt16(2, 'OrientationHorizontally', {scale:1, signed:true}), new E3.O3EInt16(2, 'OrientationVertically', {scale:1, signed:true}), new E3.O3EInt16(2, 'HeatingLoadPerSquareMeterPerYear', {scale:1, signed:false}), new E3.O3EInt16(2, 'CentralHeatingCylinderSize', {scale:10, signed:false}), new E3.O3EInt16(2, 'DomesticHotWaterCylinderSize', {scale:10, signed:false}), new E3.O3EInt16(2, 'BufferCylinderSize', {scale:10, signed:false}), new E3.O3EInt16(2, 'InstallationRoomSize', {scale:10, signed:false}), new E3.O3EInt16(2, 'NitrogenOxide', {scale:1, signed:false})]),
        627 : new E3.O3ERawCodec(40, 'CentralHeatingOneCircuitName'),
        628 : new E3.O3ERawCodec(40, 'CentralHeatingTwoCircuitName'),
        629 : new E3.O3ERawCodec(40, 'CentralHeatingThreeCircuitName'),
        630 : new E3.O3ERawCodec(40, 'CentralHeatingFourCircuitName'),
        631 : new E3.O3ERawCodec(12, 'CentralHeatingFiveCircuitName'),
        632 : new E3.O3ERawCodec(12, 'CentralHeatingSixCircuitName'),
        633 : new E3.O3ERawCodec(12, 'CentralHeatingSevenCircuitName'),
        634 : new E3.O3ERawCodec(12, 'CentralHeatingEightCircuitName'),
        645 : new E3.O3EByteVal(1, 'GenericAnalogDigitalAccessoryOneModulFunction'),
        646 : new E3.O3EByteVal(1, 'GenericAnalogDigitalAccessoryTwoModulFunction'),
        647 : new E3.O3EByteVal(1, 'GenericAnalogDigitalAccessoryThreeModulFunction'),
        648 : new E3.O3EByteVal(1, 'GenericAnalogDigitalAccessoryFourModulFunction'),
        649 : new E3.O3EByteVal(1, 'GenericAnalogDigitalAccessoryFiveModulFunction'),
        650 : new E3.O3EByteVal(1, 'GenericDigitalAccessoryOneModulFunction'),
        651 : new E3.O3EByteVal(1, 'GenericDigitalAccessoryTwoModulFunction'),
        652 : new E3.O3EByteVal(1, 'GenericDigitalAccessoryThreeModulFunction'),
        653 : new E3.O3EByteVal(1, 'GenericDigitalAccessoryFourModulFunction'),
        654 : new E3.O3EByteVal(1, 'GenericDigitalAccessoryFiveModulFunction'),
        680 : new E3.O3ERawCodec(123, 'EnergyMeter'),
        691 : new E3.O3EList(57, 'DomesticHotWaterTimeScheduleMonday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        692 : new E3.O3EList(57, 'DomesticHotWaterTimeScheduleTuesday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        693 : new E3.O3EList(57, 'DomesticHotWaterTimeScheduleWednesday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        694 : new E3.O3EList(57, 'DomesticHotWaterTimeScheduleThursday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        695 : new E3.O3EList(57, 'DomesticHotWaterTimeScheduleFriday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        696 : new E3.O3EList(57, 'DomesticHotWaterTimeScheduleSaturday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        697 : new E3.O3EList(57, 'DomesticHotWaterTimeScheduleSunday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        726 : new E3.O3EList(57, 'DomesticHotWaterCirculationTimeScheduleMonday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        727 : new E3.O3EList(57, 'DomesticHotWaterCirculationTimeScheduleTuesday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        728 : new E3.O3EList(57, 'DomesticHotWaterCirculationTimeScheduleWednesday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        729 : new E3.O3EList(57, 'DomesticHotWaterCirculationTimeScheduleThursday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        730 : new E3.O3EList(57, 'DomesticHotWaterCirculationTimeScheduleFriday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        731 : new E3.O3EList(57, 'DomesticHotWaterCirculationTimeScheduleSaturday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        732 : new E3.O3EList(57, 'DomesticHotWaterCirculationTimeScheduleSunday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        761 : new E3.O3EList(57, 'MixerOneCircuitTimeScheduleMonday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        762 : new E3.O3EList(57, 'MixerOneCircuitTimeScheduleTuesday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        763 : new E3.O3EList(57, 'MixerOneCircuitTimeScheduleWednesday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        764 : new E3.O3EList(57, 'MixerOneCircuitTimeScheduleThursday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        765 : new E3.O3EList(57, 'MixerOneCircuitTimeScheduleFriday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        766 : new E3.O3EList(57, 'MixerOneCircuitTimeScheduleSaturday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        767 : new E3.O3EList(57, 'MixerOneCircuitTimeScheduleSunday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        768 : new E3.O3EList(57, 'MixerTwoCircuitTimeScheduleMonday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        769 : new E3.O3EList(57, 'MixerTwoCircuitTimeScheduleTuesday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        770 : new E3.O3EList(57, 'MixerTwoCircuitTimeScheduleWednesday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        771 : new E3.O3EList(57, 'MixerTwoCircuitTimeScheduleThursday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        772 : new E3.O3EList(57, 'MixerTwoCircuitTimeScheduleFriday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        773 : new E3.O3EList(57, 'MixerTwoCircuitTimeScheduleSaturday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        774 : new E3.O3EList(57, 'MixerTwoCircuitTimeScheduleSunday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        775 : new E3.O3EList(57, 'MixerThreeCircuitTimeScheduleMonday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        776 : new E3.O3EList(57, 'MixerThreeCircuitTimeScheduleTuesday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        777 : new E3.O3EList(57, 'MixerThreeCircuitTimeScheduleWednesday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        778 : new E3.O3EList(57, 'MixerThreeCircuitTimeScheduleThursday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        779 : new E3.O3EList(57, 'MixerThreeCircuitTimeScheduleFriday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        780 : new E3.O3EList(57, 'MixerThreeCircuitTimeScheduleSaturday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        781 : new E3.O3EList(57, 'MixerThreeCircuitTimeScheduleSunday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        782 : new E3.O3EList(57, 'MixerFourCircuitTimeScheduleMonday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        783 : new E3.O3EList(57, 'MixerFourCircuitTimeScheduleTuesday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        784 : new E3.O3EList(57, 'MixerFourCircuitTimeScheduleWednesday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        785 : new E3.O3EList(57, 'MixerFourCircuitTimeScheduleThursday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        786 : new E3.O3EList(57, 'MixerFourCircuitTimeScheduleFriday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        787 : new E3.O3EList(57, 'MixerFourCircuitTimeScheduleSaturday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        788 : new E3.O3EList(57, 'MixerFourCircuitTimeScheduleSunday',[new E3.O3EByteVal(1, 'Count'), new E3.O3EComplexType(7, 'Schedules',[new E3.O3EStime(2, 'Start'),new E3.O3EStime(2, 'Stop'), new E3.O3ERawCodec(2, 'Unknown'), new E3.O3EByteVal(1, 'Mode')])]),
        873 : new E3.O3ERawCodec(2, 'LegionellaProtectionActivation'),
        874 : new E3.O3EInt16(3, 'LegionellaProtectionTargetTemperatureSetpoint'),
        875 : new E3.O3ERawCodec(2, 'LegionellaProtectionStartTime'),
        876 : new E3.O3EByteVal(1, 'LegionellaProtectionWeekday'),
        877 : new E3.O3ERawCodec(3, 'LegionellaProtectionLastSuccessfulStartTime'),
        878 : new E3.O3EByteVal(1, 'LegionellaProtectionLastSuccessfulWeekday'),
        880 : new E3.O3EHeatingCurve(4, 'MixerOneCircuitCentralHeatingCurve'),
        881 : new E3.O3EHeatingCurve(4, 'MixerTwoCircuitCentralHeatingCurve'),
        882 : new E3.O3EHeatingCurve(4, 'MixerThreeCircuitCentralHeatingCurve'),
        883 : new E3.O3EHeatingCurve(4, 'MixerFourCircuitCentralHeatingCurve'),
        884 : new E3.O3EHeatingCurve(4, 'MixerFiveCircuitCentralHeatingCurve'),
        885 : new E3.O3EHeatingCurve(4, 'MixerSixCircuitCentralHeatingCurve'),
        886 : new E3.O3EHeatingCurve(4, 'MixerSevenCircuitCentralHeatingCurve'),
        887 : new E3.O3EHeatingCurve(4, 'MixerEightCircuitCentralHeatingCurve'),
        896 : new E3.O3EInt8(2, 'OutsideTemperatureOffset'),
        897 : new E3.O3EByteVal(1, 'ScreedDryingProfileActivation'),
        898 : new E3.O3EInt8(1, 'RemainingFloorDryingDays'),
        900 : new E3.O3EInt8(1, 'GatewayRemoteSignalStrength'),
        901 : new E3.O3EByteVal(1, 'ServiceManagerIsRequired'),
        902 : new E3.O3EByteVal(1, 'MalfunctionIdentification'),
        903 : new E3.O3ERawCodec(4, 'DisplaySettings'),
        905 : new E3.O3ERawCodec(4, 'ElectricalPostHeater'),
        906 : new E3.O3ERawCodec(3, 'ExhaustFlap'),
        907 : new E3.O3EByteVal(1, 'UserInterfaceDefaultHomeScreen'),
        908 : new E3.O3EByteVal(1, 'ExternalFaultSignal'),
        909 : new E3.O3EByteVal(1, 'ExternalFaultSignalInput'),
        912 : new E3.O3ERawCodec(5, 'DaylightSavingTimeActive'),
        915 : new E3.O3ERawCodec(3, 'LastBackupDate'),
        917 : new E3.O3ERawCodec(20, 'RemoteWeatherService'),
        918 : new E3.O3EByteVal(1, 'TradeFairMode'),
        919 : new E3.O3EInt16(2, 'OutsideTemperatureDampingFactor'),
        920 : new E3.O3ERawCodec(36, 'ThreeAxisAccelerationSensor'),
        921 : new E3.O3EComplexType(2, 'ExternalAccessInProgress',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        922 : new E3.O3EInt16(2, 'ProductionTraceabilityByte'),
        923 : new E3.O3ERawCodec(8, 'RealTimeClockStatus'),
        924 : new E3.O3EByteVal(1, 'StartUpWizard'),
        925 : new E3.O3ERawCodec(5, 'FillingVenting'),
        927 : new E3.O3EByteVal(1, 'BuildingType'),
        928 : new E3.O3EUtf8(16, 'ElectronicTraceabilityNumber'),
        929 : new E3.O3EByteVal(1, 'GasType'),
        930 : new E3.O3ERawCodec(10, 'ExternalTargetCentralHeatingFlowSetpointMetaData'),
        931 : new E3.O3ERawCodec(10, 'DomesticHotWaterFlowSetpointMetaData'),
        933 : new E3.O3EComplexType(9, 'MixerOneCircuitProperty', [new E3.O3EEnum(1,'MixerCircuitType','MixerCircuitTypes'), new E3.O3EEnum(1,'BusType','BusTypes'), new E3.O3EEnum(1,'RemoteControl','RemoteControls'), new E3.O3EEnum(1,'Priority','Priorities'), new E3.O3EByteVal(1,'BusAddress'), new E3.O3EInt16(2,'FlowTemperatureOffset'), new E3.O3EEnum(1,'RegulationType','RegulationTypes'), new E3.O3EByteVal(1,'RoomTemperatureCorrectionFactor')]),
        934 : new E3.O3EComplexType(9, 'MixerTwoCircuitProperty', [new E3.O3EEnum(1,'MixerCircuitType','MixerCircuitTypes'), new E3.O3EEnum(1,'BusType','BusTypes'), new E3.O3EEnum(1,'RemoteControl','RemoteControls'), new E3.O3EEnum(1,'Priority','Priorities'), new E3.O3EByteVal(1,'BusAddress'), new E3.O3EInt16(2,'FlowTemperatureOffset'), new E3.O3EEnum(1,'RegulationType','RegulationTypes'), new E3.O3EByteVal(1,'RoomTemperatureCorrectionFactor')]),
        935 : new E3.O3EComplexType(9, 'MixerThreeCircuitProperty', [new E3.O3EEnum(1,'MixerCircuitType','MixerCircuitTypes'), new E3.O3EEnum(1,'BusType','BusTypes'), new E3.O3EEnum(1,'RemoteControl','RemoteControls'), new E3.O3EEnum(1,'Priority','Priorities'), new E3.O3EByteVal(1,'BusAddress'), new E3.O3EInt16(2,'FlowTemperatureOffset'), new E3.O3EEnum(1,'RegulationType','RegulationTypes'), new E3.O3EByteVal(1,'RoomTemperatureCorrectionFactor')]),
        936 : new E3.O3EComplexType(9, 'MixerFourCircuitProperty', [new E3.O3EEnum(1,'MixerCircuitType','MixerCircuitTypes'), new E3.O3EEnum(1,'BusType','BusTypes'), new E3.O3EEnum(1,'RemoteControl','RemoteControls'), new E3.O3EEnum(1,'Priority','Priorities'), new E3.O3EByteVal(1,'BusAddress'), new E3.O3EInt16(2,'FlowTemperatureOffset'), new E3.O3EEnum(1,'RegulationType','RegulationTypes'), new E3.O3EByteVal(1,'RoomTemperatureCorrectionFactor')]),
        937 : new E3.O3EComplexType(9, 'MixerFiveCircuitProperty', [new E3.O3EEnum(1,'MixerCircuitType','MixerCircuitTypes'), new E3.O3EEnum(1,'BusType','BusTypes'), new E3.O3EEnum(1,'RemoteControl','RemoteControls'), new E3.O3EEnum(1,'Priority','Priorities'), new E3.O3EByteVal(1,'BusAddress'), new E3.O3EInt16(2,'FlowTemperatureOffset'), new E3.O3EEnum(1,'RegulationType','RegulationTypes'), new E3.O3EByteVal(1,'RoomTemperatureCorrectionFactor')]),
        938 : new E3.O3EComplexType(9, 'MixerSixCircuitProperty', [new E3.O3EEnum(1,'MixerCircuitType','MixerCircuitTypes'), new E3.O3EEnum(1,'BusType','BusTypes'), new E3.O3EEnum(1,'RemoteControl','RemoteControls'), new E3.O3EEnum(1,'Priority','Priorities'), new E3.O3EByteVal(1,'BusAddress'), new E3.O3EInt16(2,'FlowTemperatureOffset'), new E3.O3EEnum(1,'RegulationType','RegulationTypes'), new E3.O3EByteVal(1,'RoomTemperatureCorrectionFactor')]),
        939 : new E3.O3EComplexType(9, 'MixerSevenCircuitProperty', [new E3.O3EEnum(1,'MixerCircuitType','MixerCircuitTypes'), new E3.O3EEnum(1,'BusType','BusTypes'), new E3.O3EEnum(1,'RemoteControl','RemoteControls'), new E3.O3EEnum(1,'Priority','Priorities'), new E3.O3EByteVal(1,'BusAddress'), new E3.O3EInt16(2,'FlowTemperatureOffset'), new E3.O3EEnum(1,'RegulationType','RegulationTypes'), new E3.O3EByteVal(1,'RoomTemperatureCorrectionFactor')]),
        940 : new E3.O3EComplexType(9, 'MixerEightCircuitProperty', [new E3.O3EEnum(1,'MixerCircuitType','MixerCircuitTypes'), new E3.O3EEnum(1,'BusType','BusTypes'), new E3.O3EEnum(1,'RemoteControl','RemoteControls'), new E3.O3EEnum(1,'Priority','Priorities'), new E3.O3EByteVal(1,'BusAddress'), new E3.O3EInt16(2,'FlowTemperatureOffset'), new E3.O3EEnum(1,'RegulationType','RegulationTypes'), new E3.O3EByteVal(1,'RoomTemperatureCorrectionFactor')]),
        950 : new E3.O3EInt8(4, 'SolarCircuitWaterFlowRate', {signed:true}),
        951 : new E3.O3ERawCodec(8, 'SolarCircuitExtendedFunctions'),
        952 : new E3.O3ERawCodec(51, 'HydraulicMatrix'),
        953 : new E3.O3ERawCodec(24, 'SolarEnergyYield'),
        954 : new E3.O3EList(181, 'BusTopologyMatrix', [new E3.O3EInt8(1, 'Count'), new E3.O3EComplexType(36, 'TopologyElement',[new E3.O3EByteVal(1, 'NodeID'), new E3.O3EEnum(1, 'BusType', 'BusTypes'), new E3.O3EByteVal(1, 'DeviceProperty'), new E3.O3EByteVal(1, 'DeviceFunction'), new E3.O3ESoftVers(8, 'SW-Version'), new E3.O3ESoftVers(8, 'HW-Version'), new E3.O3EUtf8(16, 'VIN')])]),
        960 : new E3.O3EByteVal(1, 'ExhaustPipeType'),
        961 : new E3.O3ERawCodec(2, 'SecurityAlgorithmNumber'),
        962 : new E3.O3ESoftVers(8, 'BootLoaderVersion'),
        964 : new E3.O3EByteVal(1, 'ActiveDiagnosticSession'),
        987 : new E3.O3EInt16(2, 'MixerOneCircuitFlowTemperatureTargetSetpoint', {signed:true}),
        988 : new E3.O3EInt16(2, 'MixerTwoCircuitFlowTemperatureTargetSetpoint', {signed:true}),
        989 : new E3.O3EInt16(2, 'MixerThreeCircuitFlowTemperatureTargetSetpoint', {signed:true}),
        990 : new E3.O3EInt16(2, 'MixerFourCircuitFlowTemperatureTargetSetpoint', {signed:true}),
        1004 : new E3.O3EByteVal(1, 'CentralHeatingRegulationMode'),
        1006 : new E3.O3ERawCodec(4, 'TargetQuickMode'),
        1007 : new E3.O3ERawCodec(4, 'CurrentQuickMode'),
        1008 : new E3.O3ERawCodec(4, 'MixerOneCircuitTargetQuickMode'),
        1009 : new E3.O3ERawCodec(4, 'MixerTwoCircuitTargetQuickMode'),
        1010 : new E3.O3ERawCodec(4, 'MixerThreeCircuitTargetQuickMode'),
        1011 : new E3.O3ERawCodec(4, 'MixerFourCircuitTargetQuickMode'),
        1024 : new E3.O3ERawCodec(4, 'MixerOneCircuitCurrentQuickMode'),
        1025 : new E3.O3ERawCodec(4, 'MixerTwoCircuitCurrentQuickMode'),
        1026 : new E3.O3ERawCodec(4, 'MixerThreeCircuitCurrentQuickMode'),
        1027 : new E3.O3ERawCodec(4, 'MixerFourCircuitCurrentQuickMode'),
        1040 : new E3.O3EComplexType(6, 'SupplyAirFan',[new E3.O3ERawCodec(3, '?1'), new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3ERawCodec(1, '?2')]),
        1041 : new E3.O3EComplexType(6, 'ExhaustAirFan',[new E3.O3ERawCodec(3, '?1'), new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3ERawCodec(1, '?2')]),
        1042 : new E3.O3ERawCodec(9, 'PrimaryHeatExchangerTemperatureSensor'),
        1043 : new E3.O3EComplexType(5, 'AllengraSensor', [new E3.O3EInt16(2, 'Actual'), new E3.O3EInt16(2, 'Minimum')]),
        1044 : new E3.O3ERawCodec(2, 'SecondaryCentralHeatingPump'),
        1047 : new E3.O3ERawCodec(11, 'TimeSeriesRecordedFlowTemperatureSensor'),
        1084 : new E3.O3ERawCodec(4, 'FlowTemperatureMinimumMaximumLimit'),
        1085 : new E3.O3EInt16(4, 'DomesticHotWaterHysteresis'),
        1087 : new E3.O3EInt8(2, 'MaximumDomesticHotWaterLoadingTime'),
        1088 : new E3.O3EByteVal(1, 'OutsideAirBypass'),
        1089 : new E3.O3EByteVal(1, 'InsideAirBypass'),
        1090 : new E3.O3ERawCodec(9, 'EnvironmentAirQuality'),
        1093 : new E3.O3ERawCodec(2, 'ExhaustPipeLength'),
        1096 : new E3.O3EByteVal(1, 'ResetEnergyManagerDataCollector'),
        1097 : new E3.O3ERawCodec(20, 'ElectricityPrice'),
        1098 : new E3.O3ERawCodec(20, 'GasProperties'),
        1100 : new E3.O3EComplexType(3, 'CentralHeatingPumpMinimumMaximumLimit', [new E3.O3EInt8(1, 'MinSpeed'), new E3.O3EInt8(1, 'MaxSpeed'), new E3.O3EInt8(1, 'Setpoint')]),
        1101 : new E3.O3EComplexType(3, 'DomesticHotWaterPumpMinimumMaximumLimit', [new E3.O3EInt8(1, 'MinSpeed'), new E3.O3EInt8(1, 'MaxSpeed'), new E3.O3EInt8(1, 'Setpoint')]),
        1102 : new E3.O3EComplexType(3, 'MixerOneCircuitPumpMinimumMaximumLimit', [new E3.O3EInt8(1, 'MinSpeed'), new E3.O3EInt8(1, 'MaxSpeed'), new E3.O3EInt8(1, 'Setpoint')]),
        1103 : new E3.O3EComplexType(3, 'MixerTwoCircuitPumpMinimumMaximumLimit', [new E3.O3EInt8(1, 'MinSpeed'), new E3.O3EInt8(1, 'MaxSpeed'), new E3.O3EInt8(1, 'Setpoint')]),
        1104 : new E3.O3EComplexType(3, 'MixerThreeCircuitPumpMinimumMaximumLimit', [new E3.O3EInt8(1, 'MinSpeed'), new E3.O3EInt8(1, 'MaxSpeed'), new E3.O3EInt8(1, 'Setpoint')]),
        1105 : new E3.O3EComplexType(3, 'MixerFourCircuitPumpMinimumMaximumLimit', [new E3.O3EInt8(1, 'MinSpeed'), new E3.O3EInt8(1, 'MaxSpeed'), new E3.O3EInt8(1, 'Setpoint')]),
        1118 : new E3.O3EComplexType(3, 'SolarCircuitPumpMinimumMaximumLimit', [new E3.O3EInt8(1, 'MinSpeed'), new E3.O3EInt8(1, 'MaxSpeed'), new E3.O3EInt8(1, 'Setpoint')]),
        1125 : new E3.O3EInt16(2, 'SolarMaximumLoadingTemperature', {signed:true}),
        1128 : new E3.O3EInt16(2, 'SolarStagnationHours', {signed:true}),
        1132 : new E3.O3EComplexType(97, 'ViessmannIdentificationNumberListInternal', [new E3.O3EByteVal(1, 'Count'), new E3.O3EUtf8(16, 'VIN1'), new E3.O3EUtf8(16, 'VIN2'), new E3.O3EUtf8(16, 'VIN3'), new E3.O3EUtf8(16, 'VIN4'), new E3.O3EUtf8(16, 'VIN5'), new E3.O3EUtf8(16, 'VIN6')]),
        1136 : new E3.O3ERawCodec(4, 'SolarProperty'),
        1137 : new E3.O3EByteVal(1, 'ServiceModeActivation'),
        1138 : new E3.O3ERawCodec(1, 'AccentLedBar'),
        1139 : new E3.O3ERawCodec(7, 'CentralHeatingCurveAdaptionParameter'),
        1165 : new E3.O3EByteVal(1, 'BackendConnectionStatus'),
        1166 : new E3.O3ERawCodec(5, 'ResetDtcHistory'),
        1167 : new E3.O3EInt16(2, 'ExternalDomesticHotWaterTemperatureSetpoint', {signed:true}),
        1172 : new E3.O3ERawCodec(14, 'SolarCircuitPumpStatistical'),
        1175 : new E3.O3EByteVal(1, 'AcknowledgeInfoAlarmMessage'),
        1176 : new E3.O3EByteVal(1, 'AcknowledgeWarningAlarmMessage'),
        1177 : new E3.O3EByteVal(1, 'AcknowledgeServiceAlarmMessage'),
        1178 : new E3.O3EByteVal(1, 'AcknowledgeErrorAlarmMessage'),
        1181 : new E3.O3EInt8(1, 'DisplayTestMode'),
        1190 : new E3.O3EInt16(4, 'ThermalPower'),
        1191 : new E3.O3ERawCodec(1, 'FuelCellStatus'),
        1192 : new E3.O3EComplexType(10, 'MixerOneCircuitFlowTemperatureMinimumMaximumLimit', [new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true})]),
        1193 : new E3.O3EComplexType(10, 'MixerTwoCircuitFlowTemperatureMinimumMaximumLimit', [new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true})]),
        1194 : new E3.O3EComplexType(10, 'MixerThreeCircuitFlowTemperatureMinimumMaximumLimit', [new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true})]),
        1195 : new E3.O3EComplexType(10, 'MixerFourCircuitFlowTemperatureMinimumMaximumLimit', [new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true})]),
        1196 : new E3.O3EComplexType(10, 'MixerFiveCircuitFlowTemperatureMinimumMaximumLimit', [new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true})]),
        1197 : new E3.O3EComplexType(10, 'MixerSixCircuitFlowTemperatureMinimumMaximumLimit', [new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true})]),
        1198 : new E3.O3EComplexType(10, 'MixerSevenCircuitFlowTemperatureMinimumMaximumLimit', [new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true})]),
        1199 : new E3.O3EComplexType(10, 'MixerEightCircuitFlowTemperatureMinimumMaximumLimit', [new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true})]),
        1210 : new E3.O3ERawCodec(13, 'FuelCellStatistical'),
        1211 : new E3.O3ERawCodec(24, 'GeneratedCentralHeatingOutput'),
        1214 : new E3.O3ERawCodec(2, 'ElectricalPowerOutput'),
        1215 : new E3.O3ERawCodec(1, 'FuelCellState'),
        1216 : new E3.O3ERawCodec(1, 'FuelCellStateTwo'),
        1217 : new E3.O3ERawCodec(1, 'FuelCellGenerationMode'),
        1218 : new E3.O3ERawCodec(1, 'FuelCellInstruction'),
        1220 : new E3.O3ERawCodec(1, 'FuelCellMode'),
        1221 : new E3.O3ERawCodec(1, 'FuelCellModeResult'),
        1222 : new E3.O3ERawCodec(1, 'FuelCellRunRequest'),
        1223 : new E3.O3ERawCodec(1, 'FuelCellRunRequestResult'),
        1224 : new E3.O3ERawCodec(1, 'FuelCellStopRequest'),
        1226 : new E3.O3ERawCodec(1, 'FuelCellProcessNumber'),
        1227 : new E3.O3ERawCodec(1, 'FuelCellRequestAction'),
        1228 : new E3.O3ERawCodec(1, 'FuelCellCompletionNotification'),
        1229 : new E3.O3ERawCodec(1, 'FuelCellGasTypeSetting'),
        1230 : new E3.O3ERawCodec(1, 'FuelCellCountrySetting'),
        1231 : new E3.O3ERawCodec(4, 'FuelCellPrimaryPump'),
        1232 : new E3.O3EEnum(1, 'GenericDigitalInputConfigurationOnBoardOne', 'DigitalInputConfigurations'),
        1233 : new E3.O3ERawCodec(68, 'GatewayRemoteVisibleOneTwo'),
        1234 : new E3.O3ERawCodec(68, 'GatewayRemoteVisibleThreeFour'),
        1235 : new E3.O3ERawCodec(68, 'GatewayRemoteVisibleFiveSix'),
        1236 : new E3.O3ERawCodec(68, 'GatewayRemoteVisibleSevenEight'),
        1237 : new E3.O3ERawCodec(68, 'GatewayRemoteVisibleNineTen'),
        1238 : new E3.O3ERawCodec(31, 'AvailableActorSensorComponents'),
        1239 : new E3.O3ERawCodec(2, 'ActorSensorTest'),
        1240 : new E3.O3EByteVal(1, 'CentralHeatingPumpMode'),
        1241 : new E3.O3EByteVal(1, 'MixerOneCircuitPumpMode'),
        1242 : new E3.O3EByteVal(1, 'MixerTwoCircuitPumpMode'),
        1243 : new E3.O3EByteVal(1, 'MixerThreeCircuitPumpMode'),
        1244 : new E3.O3EByteVal(1, 'MixerFourCircuitPumpMode'),
        1263 : new E3.O3ERawCodec(2, 'DiverterValveBoilerHydraulicTower'),
        1264 : new E3.O3ERawCodec(2, 'DiverterValveFuelCellHydraulicTower'),
        1265 : new E3.O3ERawCodec(8, 'FanTargetSpeedMeta'),
        1266 : new E3.O3EInt16(8, 'DiverterValveStatistical', {scale:1}),
        1286 : new E3.O3EList(181, 'BusTopologyMatrixTwo', [new E3.O3EInt8(1, 'Count'), new E3.O3EComplexType(36, 'TopologyElement',[new E3.O3EByteVal(1, 'NodeID'), new E3.O3EEnum(1, 'BusType', 'BusTypes'), new E3.O3EByteVal(1, 'DeviceProperty'), new E3.O3EByteVal(1, 'DeviceFunction'), new E3.O3ESoftVers(8, 'SW-Version'), new E3.O3ESoftVers(8, 'HW-Version'), new E3.O3EUtf8(16, 'VIN')])]),
        1287 : new E3.O3EList(181, 'BusTopologyMatrixThree', [new E3.O3EInt8(1, 'Count'), new E3.O3EComplexType(36, 'TopologyElement',[new E3.O3EByteVal(1, 'NodeID'), new E3.O3EEnum(1, 'BusType', 'BusTypes'), new E3.O3EByteVal(1, 'DeviceProperty'), new E3.O3EByteVal(1, 'DeviceFunction'), new E3.O3ESoftVers(8, 'SW-Version'), new E3.O3ESoftVers(8, 'HW-Version'), new E3.O3EUtf8(16, 'VIN')])]),
        1288 : new E3.O3EList(181, 'BusTopologyMatrixFour', [new E3.O3EInt8(1, 'Count'), new E3.O3EComplexType(36, 'TopologyElement',[new E3.O3EByteVal(1, 'NodeID'), new E3.O3EEnum(1, 'BusType', 'BusTypes'), new E3.O3EByteVal(1, 'DeviceProperty'), new E3.O3EByteVal(1, 'DeviceFunction'), new E3.O3ESoftVers(8, 'SW-Version'), new E3.O3ESoftVers(8, 'HW-Version'), new E3.O3EUtf8(16, 'VIN')])]),
        1289 : new E3.O3EList(181, 'BusTopologyMatrixFive', [new E3.O3EInt8(1, 'Count'), new E3.O3EComplexType(36, 'TopologyElement',[new E3.O3EByteVal(1, 'NodeID'), new E3.O3EEnum(1, 'BusType', 'BusTypes'), new E3.O3EByteVal(1, 'DeviceProperty'), new E3.O3EByteVal(1, 'DeviceFunction'), new E3.O3ESoftVers(8, 'SW-Version'), new E3.O3ESoftVers(8, 'HW-Version'), new E3.O3EUtf8(16, 'VIN')])]),
        1290 : new E3.O3ERawCodec(4, 'DomesticHotWaterShiftLoadPump'),
        1294 : new E3.O3ERawCodec(124, 'EnergyConsumptionCentralHeatingMonthMatrix'),
        1311 : new E3.O3ERawCodec(124, 'EnergyConsumptionDomesticHotWaterMonthMatrix'),
        1312 : new E3.O3ERawCodec(124, 'EnergyConsumptionCoolingMonthMatrix'),
        1313 : new E3.O3ERawCodec(124, 'GeneratedElectricityMonthMatrix'),
        1314 : new E3.O3ERawCodec(124, 'SolarEnergyYieldMonthMatrix'),
        1315 : new E3.O3ERawCodec(124, 'GeneratedCentralHeatingOutputMonthMatrix'),
        1316 : new E3.O3ERawCodec(96, 'EnergyConsumptionCentralHeatingYearMatrix'),
        1333 : new E3.O3ERawCodec(96, 'EnergyConsumptionDomesticHotWaterYearMatrix'),
        1334 : new E3.O3ERawCodec(96, 'EnergyConsumptionCoolingYearMatrix'),
        1335 : new E3.O3ERawCodec(96, 'GeneratedElectricityYearMatrix'),
        1336 : new E3.O3ERawCodec(96, 'SolarEnergyYieldYearMatrix'),
        1337 : new E3.O3ERawCodec(96, 'GeneratedCentralHeatingOutputYearMatrix'),
        1338 : new E3.O3ERawCodec(31, 'ScreedDryingProfileDefinition'),
        1339 : new E3.O3EByteVal(1, 'MalfunctionHeatingUnitBlocked'),
        1340 : new E3.O3ERawCodec(124, 'FuelCellGeneratedHeatOutputMonthMatrix'),
        1341 : new E3.O3ERawCodec(96, 'FuelCellGeneratedHeatOutputYearMatrix'),
        1342 : new E3.O3ERawCodec(124, 'GasConsumptionCentralHeatingMonthMatrix'),
        1343 : new E3.O3ERawCodec (48, 'GasConsumptionCentralHeatingYearMatrix'),
        1344 : new E3.O3ERawCodec(124, 'GasConsumptionDomesticHotWaterMonthMatrix'),
        1345 : new E3.O3ERawCodec(48, 'GasConsumptionDomesticHotWaterYearMatrix'),
        1346 : new E3.O3EComplexType(12, 'HeatEngineStatistical', [new E3.O3EInt32(4, 'Betriebsstunden', {scale:1}), new E3.O3EInt32(4, 'Brennerstunden', {scale:1}), new E3.O3EInt32(4, 'Brennerstarts', {scale:1})]),
        1347 : new E3.O3ERawCodec(10, 'ObjectElectricalEnergyStatus'),
        1348 : new E3.O3ERawCodec(12, 'FuelCellGasConsumption'),
        1349 : new E3.O3ERawCodec(124, 'FuelCellGasConsumptionMonthMatrix'),
        1350 : new E3.O3ERawCodec(48, 'FuelCellGasConsumptionYearMatrix'),
        1351 : new E3.O3ERawCodec(24, 'FeedInEnergy'),
        1352 : new E3.O3ERawCodec(124, 'FeedInEnergyMonthMatrix'),
        1353 : new E3.O3ERawCodec(96, 'FeedInEnergyYearMatrix'),
        1354 : new E3.O3ERawCodec(6, 'ProductionCoverageRate'),
        1355 : new E3.O3ERawCodec(62, 'ProductionCoverageRateMonthMatrix'),
        1356 : new E3.O3ERawCodec(24, 'ProductionCoverageRateYearMatrix'),
        1357 : new E3.O3ERawCodec(11, 'FuelCellOperationTime'),
        1358 : new E3.O3ERawCodec(124, 'FuelCellOperationTimeMonthMatrix'),
        1359 : new E3.O3ERawCodec(48, 'FuelCellOperationTimeYearMatrix'),
        1360 : new E3.O3ERawCodec(11, 'FuelCellRunTime'),
        1361 : new E3.O3ERawCodec(124, 'FuelCellRunTimeMonthMatrix'),
        1362 : new E3.O3ERawCodec(48, 'FuelCellRunTimeYearMatrix'),
        1363 : new E3.O3ERawCodec(1, 'FuelCellTargetOperationMode'),
        1364 : new E3.O3EByteVal(1, 'GenericSdioAccessoryOneModulFunction'),
        1367 : new E3.O3ERawCodec(2, 'FuelCellThermalPower'),
        1371 : new E3.O3ERawCodec(6, 'DemandCoverageRate'),
        1372 : new E3.O3ERawCodec(62, 'DemandCoverageRateMonthMatrix'),
        1373 : new E3.O3ERawCodec(24, 'DemandCoverageRateYearMatrix'),
        1383 : new E3.O3ERawCodec(11, 'FuelCellBreakdownRate'),
        1384 : new E3.O3ERawCodec(124, 'FuelCellBreakdownRateMonthMatrix'),
        1385 : new E3.O3ERawCodec(48, 'FuelCellBreakdownRateYearMatrix'),
        1389 : new E3.O3ERawCodec(124, 'CoTwoSavingsMonthMatrix'),
        1390 : new E3.O3ERawCodec(96, 'CoTwoSavingsYearMatrix'),
        1391 : new E3.O3ERawCodec(24, 'GeneratedDomesticHotWaterOutput'),
        1392 : new E3.O3ERawCodec(124, 'GeneratedDomesticHotWaterOutputMonthMatrix'),
        1393 : new E3.O3ERawCodec(96, 'GeneratedDomesticHotWaterOutputYearMatrix'),
        1394 : new E3.O3EInt16(2, 'SolarChargingDomesticHotWaterSetpoint', {signed:true}),
        1395 : new E3.O3EInt16(3, 'MixerOneCircuitSummerSavingTemperatureThreshold', {offset:1}),
        1396 : new E3.O3EInt16(3, 'MixerTwoCircuitSummerSavingTemperatureThreshold', {offset:1}),
        1397 : new E3.O3EInt16(3, 'MixerThreeCircuitSummerSavingTemperatureThreshold', {offset:1}),
        1398 : new E3.O3EInt16(3, 'MixerFourCircuitSummerSavingTemperatureThreshold', {offset:1}),
        1411 : new E3.O3EByteVal(1, 'ResetServiceInterval'),
        1415 : new E3.O3EComplexType(2, 'MixerOneCircuitOperationState',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        1416 : new E3.O3EComplexType(2, 'MixerTwoCircuitOperationState',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        1417 : new E3.O3EComplexType(2, 'MixerThreeCircuitOperationState',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        1418 : new E3.O3EComplexType(2, 'MixerFourCircuitOperationState',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        1419 : new E3.O3EComplexType(2, 'MixerFiveCircuitOperationState',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        1420 : new E3.O3EComplexType(2, 'MixerSixCircuitOperationState',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        1421 : new E3.O3EComplexType(2, 'MixerSevenCircuitOperationState',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        1422 : new E3.O3EComplexType(2, 'MixerEightCircuitOperationState',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        1431 : new E3.O3ERawCodec(8, 'CarbonEmissionSettings'),
        1432 : new E3.O3ERawCodec(4, 'CentralHeatingPumpPerformance'),
        1434 : new E3.O3ERawCodec(1, 'ResetFuelCellStatistics'),
        1435 : new E3.O3ERawCodec(9, 'FuelCellFlowTemperatureSensor'),
        1436 : new E3.O3ERawCodec(9, 'FuelCellReturnTemperatureSensor'),
        1439 : new E3.O3ERawCodec(41, 'NoiseReductionTimeScheduleMonday'),
        1440 : new E3.O3ERawCodec(41, 'NoiseReductionTimeScheduleTuesday'),
        1441 : new E3.O3ERawCodec(41, 'NoiseReductionTimeScheduleWednesday'),
        1442 : new E3.O3ERawCodec(41, 'NoiseReductionTimeScheduleThursday'),
        1443 : new E3.O3ERawCodec(41, 'NoiseReductionTimeScheduleFriday'),
        1444 : new E3.O3ERawCodec(41, 'NoiseReductionTimeScheduleSaturday'),
        1445 : new E3.O3ERawCodec(41, 'NoiseReductionTimeScheduleSunday'),
        1451 : new E3.O3ERawCodec(4, 'ApplicationChecksum'),
        1467 : new E3.O3ERawCodec(2, 'SafetyRelevantRemoteUnlock'),
        1468 : new E3.O3ERawCodec(9, 'FuelCellGasPressure'),
        1469 : new E3.O3ERawCodec(31, 'SensorActuatorTestGroupHeatEngine'),
        1470 : new E3.O3ERawCodec(31, 'SensorActuatorTestGroupDomesticHotWater'),
        1471 : new E3.O3ERawCodec(31, 'SensorActuatorTestGroupFuelCell'),
        1472 : new E3.O3ERawCodec(31, 'SensorActuatorTestGroupHeatingCircuit'),
        1473 : new E3.O3ERawCodec(31, 'SensorActuatorTestGroupSolar'),
        1492 : new E3.O3ERawCodec(4, 'SolarCircuitPumpHysteresis'),
        1493 : new E3.O3ERawCodec(16, 'HeatEnginePerformanceStatistics'),
        1494 : new E3.O3ESoftVers(8, 'OemProductVersion'),
        1503 : new E3.O3ERawCodec(1, 'MinimumLoadPercent'),
        1504 : new E3.O3EEnum(1, 'TimeSettingSource', 'TimeSettingSources'),
        1505 : new E3.O3ERawCodec(2, 'SolarStagnationTemperatureOffset'),
        1529 : new E3.O3EByteVal(1, 'SolarRechargeSuppressionImpact'),
        1533 : new E3.O3ERawCodec(2, 'InstallationWizardInProgress'),
        1535 : new E3.O3ERawCodec(3, 'FlueGasSensorTestMode'),
        1536 : new E3.O3ERawCodec(3, 'PrimaryCircuitWaterFlowTestMode'),
        1537 : new E3.O3ERawCodec(3, 'ChimneySweeperTestMode'),
        1538 : new E3.O3EByteVal(1, 'ZigbeeEnable'),
        1539 : new E3.O3EByteVal(1, 'ZigbeeStatus'),
        1540 : new E3.O3ERawCodec(26, 'ZigbeeIdentification'),
        1541 : new E3.O3ERawCodec(5, 'LegionellaProtectionPump'),
        1549 : new E3.O3ERawCodec(97, 'HydraulicMatrixConfiguration'),
        1550 : new E3.O3ERawCodec(22, 'FunctionMatrix'),
        1551 : new E3.O3ERawCodec(1, 'FuelCellExternalControl'),
        1552 : new E3.O3ERawCodec(7, 'ElectricalEnergyStorageOperationState'),
        1553 : new E3.O3ERawCodec(6, 'ElectronicControlUnitOdxVersion'),
        1554 : new E3.O3ERawCodec(2, 'HeatingSupport'),
        1555 : new E3.O3ERawCodec(6, 'MixerOneCircuitFixedValueFlowTemperatureSetpoint'),
        1556 : new E3.O3ERawCodec(6, 'MixerTwoCircuitFixedValueFlowTemperatureSetpoint'),
        1557 : new E3.O3ERawCodec(6, 'MixerThreeCircuitFixedValueFlowTemperatureSetpoint'),
        1558 : new E3.O3ERawCodec(6, 'MixerFourCircuitFixedValueFlowTemperatureSetpoint'),
        1559 : new E3.O3ERawCodec(6, 'MixerFiveCircuitFixedValueFlowTemperatureSetpoint'),
        1560 : new E3.O3ERawCodec(6, 'MixerSixCircuitFixedValueFlowTemperatureSetpoint'),
        1561 : new E3.O3ERawCodec(6, 'MixerSevenCircuitFixedValueFlowTemperatureSetpoint'),
        1562 : new E3.O3ERawCodec(6, 'MixerEightCircuitFixedValueFlowTemperatureSetpoint'),
        1573 : new E3.O3ERawCodec(9, 'SystemReturnTemperatureSensor'),
        1577 : new E3.O3ERawCodec(139, 'ElectricalEnergyStorageModuleOneOperatingData'),
        1578 : new E3.O3ERawCodec(139, 'ElectricalEnergyStorageModuleTwoOperatingData'),
        1579 : new E3.O3ERawCodec(139, 'ElectricalEnergyStorageModuleThreeOperatingData'),
        1580 : new E3.O3ERawCodec(139, 'ElectricalEnergyStorageModuleFourOperatingData'),
        1581 : new E3.O3ERawCodec(139, 'ElectricalEnergyStorageModuleFiveOperatingData'),
        1582 : new E3.O3ERawCodec(139, 'ElectricalEnergyStorageModuleSixOperatingData'),
        1585 : new E3.O3ERawCodec(2, 'IncreasedReturnTemperatureSetpoint'),
        1587 : new E3.O3ERawCodec(4, 'ExternalAlternatingCurrentPowerSetpointMetaData'),
        1588 : new E3.O3ERawCodec(4, 'AlternatingCurrentPowerSetpoint'),
        1589 : new E3.O3ERawCodec(4, 'AlternatingCurrentPowerSetpointMetaData'),
        1590 : new E3.O3ERawCodec(6, 'ElectricalEnergySystemOperationState'),
        1591 : new E3.O3ERawCodec(6, 'ElectricalEnergyInverterOperationState'),
        1592 : new E3.O3ERawCodec(1, 'ElectricalEnergyInverterPath'),
        1593 : new E3.O3ERawCodec(4, 'BufferHysteresis'),
        1594 : new E3.O3ERawCodec(3, 'LastApplicationUpdate'),
        1595 : new E3.O3ERawCodec(8, 'ParameterIdentificationVersionFactory'),
        1596 : new E3.O3ERawCodec(9, 'IncreasedReturnTemperatureSensor'),
        1598 : new E3.O3ERawCodec(4, 'SolarStaticTemperatureControlHysteresis'),
        1599 : new E3.O3ERawCodec(4, 'SolarSecondaryDeltaTemperatureHysteresis'),
        1600 : new E3.O3ERawCodec(2, 'BufferDischargeFunctionThreeWayValvePositionPercent'),
        1601 : new E3.O3ERawCodec(1, 'FuelCellCondition'),
        1603 : new E3.O3EComplexType(4, 'PointOfCommonCouplingPower', [new E3.O3EInt16(2, 'ActivePower', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'ReactivePower', {scale:1.0, signed:true})]),
        1604 : new E3.O3ERawCodec(2, 'GatewayExternalTargetFlowTemperatureSetpoint'),
        1605 : new E3.O3EComplexType(2, 'GatewayExternalHeatEngineTargetOperationMode',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        1606 : new E3.O3ERawCodec(8, 'IntervalStrategyProperties'),
        1607 : new E3.O3EByteVal(1, 'MalfunctionUnitBlocked'),
        1608 : new E3.O3ERawCodec(9, 'DifferentialTemperatureControllerHeatSourceTemperatureSensor'),
        1609 : new E3.O3ERawCodec(9, 'DifferentialTemperatureControllerHeatSinkTemperatureSensor'),
        1610 : new E3.O3ERawCodec(9, 'HeatingSupportBufferTemperatureSensor'),
        1611 : new E3.O3ERawCodec(9, 'PreheatingReferenceTemperatureSensor'),
        1612 : new E3.O3EComplexType(2, 'ExternalMixerTwoCircuitTargetOperationMode',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        1613 : new E3.O3EComplexType(2, 'ExternalMixerThreeCircuitTargetOperationMode',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        1614 : new E3.O3EComplexType(2, 'ExternalMixerFourCircuitTargetOperationMode',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        1627 : new E3.O3EInt16(2, 'ExternalMixerOneCircuitFixedValueTargetTemperatureSetpoint', {scale:10, signed:true}),
        1628 : new E3.O3EInt16(2, 'ExternalMixerTwoCircuitFixedValueTargetTemperatureSetpoint', {scale:10, signed:true}),
        1629 : new E3.O3EInt16(2, 'ExternalMixerThreeCircuitFixedValueTargetTemperatureSetpoint', {scale:10, signed:true}),
        1630 : new E3.O3EInt16(2, 'ExternalMixerFourCircuitFixedValueTargetTemperatureSetpoint', {scale:10, signed:true}),
        1643 : new E3.O3EInt16(2, 'MixerOneCircuitCurrentTemperatureSetpoint', {scale:10, signed:true}),
        1644 : new E3.O3EInt16(2, 'MixerTwoCircuitCurrentTemperatureSetpoint', {scale:10, signed:true}),
        1645 : new E3.O3EInt16(2, 'MixerThreeCircuitCurrentTemperatureSetpoint', {scale:10, signed:true}),
        1646 : new E3.O3EInt16(2, 'MixerFourCircuitCurrentTemperatureSetpoint', {scale:10, signed:true}),
        1659 : new E3.O3EInt16(3, 'EndResultDomesticHotWaterTemperatureSetpoint', {scale:10, signed:true}),
        1660 : new E3.O3ERawCodec(16, 'SupportedFeatures'),
        1661 : new E3.O3ERawCodec(5, 'SolarSecondaryTransferPump'),
        1662 : new E3.O3ERawCodec(2, 'HeatingSupportBufferThreeWayValvePositionPercent'),
        1663 : new E3.O3ERawCodec(41, 'TestStatus'),
        1664 : new E3.O3EInt8(1, 'ElectricalEnergyStorageStateOfCharge'),
        1667 : new E3.O3ERawCodec(2, 'MixerOneCircuitPumpOscillationTime'),
        1668 : new E3.O3ERawCodec(2, 'MixerTwoCircuitPumpOscillationTime'),
        1669 : new E3.O3ERawCodec(2, 'MixerThreeCircuitPumpOscillationTime'),
        1670 : new E3.O3ERawCodec(2, 'MixerFourCircuitPumpOscillationTime'),
        1684 : new E3.O3ERawCodec(9, 'AmbientTemperatureSensor'),
        1685 : new E3.O3ERawCodec(3, 'ElectricalEnergyInverterDCConfiguration'),
        1686 : new E3.O3ERawCodec(3, 'ElectricalEnergySystemPhotovoltaicLimitation'),
        1687 : new E3.O3EInt16(2, 'ElectricalEnergySystemPhotovoltaicConfiguration', {scale:10}),
        1690 : new E3.O3EComplexType(17, 'ElectricalEnergySystemPhotovoltaicStatus',
            [new E3.O3EInt16(2, 'ActivePower String 1', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'RectivePower String 1', {scale:1.0, signed:true}),
                new E3.O3EInt16(2, 'ActivePower String 2', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'RectivePower String 2', {scale:1.0, signed:true}),
                new E3.O3EInt16(2, 'ActivePower String 3', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'RectivePower String 3', {scale:1.0, signed:true}),
                new E3.O3EInt16(2, 'ActivePower cumulated', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'RectivePower cumulated', {scale:1.0, signed:true}),
                new E3.O3EInt8(1, 'OpMode', {scale:1.0, signed:false})]),
        1691 : new E3.O3EByteVal(1, 'BusTopologyScanStatus'),
        1692 : new E3.O3ERawCodec(1, 'PowerGridCodeConfiguration'),
        1693 : new E3.O3EByteVal(1, 'GridOperatorConfigurationLock'),
        1694 : new E3.O3EByteVal(1, 'GatewayEthernetEnable'),
        1695 : new E3.O3ERawCodec(21, 'GatewayEthernetConfig'),
        1696 : new E3.O3ERawCodec(20, 'GatewayEthernetIp'),
        1697 : new E3.O3EByteVal(1, 'GatewayEthernetNetworkStatus'),
        1698 : new E3.O3ERawCodec(16, 'SupportedFeaturesTelemetryControlUnit'),
        1699 : new E3.O3ERawCodec(16, 'ActivatedFeaturesTelemetryControlUnit'),
        1700 : new E3.O3ERawCodec(104, 'EebusDeviceList'),
        1701 : new E3.O3ERawCodec(104, 'EebusOwnInfo'),
        1702 : new E3.O3ERawCodec(104, 'EebusPartnerInfo'),
        1703 : new E3.O3ERawCodec(1, 'EebusConnectionStatus'),
        1706 : new E3.O3ERawCodec(1, 'GenericMZIOAccessoryTwoModuleFunction'),
        1710 : new E3.O3ESoftVers(8, 'FunctionalSoftwareVersion'),
        1718 : new E3.O3EComplexType(2, 'ElectricalEnergySystemConfiguration', [new E3.O3EByteVal(1, 'Netzbetriebsart'), new E3.O3EByteVal(1, 'Elektrische Anlagenkomponenten')]),
        1719 : new E3.O3ERawCodec(3, 'SolarIntervalFunction'),
        1721 : new E3.O3ERawCodec(8, 'WaterPressureConfiguration'),
        1728 : new E3.O3ERawCodec(2, 'ThermostatTerminalOneCircuitPump'),
        1729 : new E3.O3ERawCodec(2, 'ThermostatTerminalTwoCircuitPump'),
        1730 : new E3.O3ERawCodec(2, 'ThermostatTerminalThreeCircuitPump'),
        1731 : new E3.O3EByteVal(1, 'ExternalLockActive'),
        1732 : new E3.O3ERawCodec(6, 'FixedRoomTemperatureSetpoint'),
        1749 : new E3.O3ERawCodec(176, 'TimeSeriesRecordedModulationCurrentValueStepsAndDurationOne'),
        1750 : new E3.O3ERawCodec(176, 'TimeSeriesRecordedModulationCurrentValueStepsAndDurationTwo'),
        1751 : new E3.O3ERawCodec(132, 'TimeSeriesRecordedModulationCurrentValueStepsAndDurationThree'),
        1752 : new E3.O3ERawCodec(176, 'TimeSeriesRecordedFlowTemperatureSensorStepsAndDurationOne'),
        1753 : new E3.O3ERawCodec(176, 'TimeSeriesRecordedFlowTemperatureSensorStepsAndDurationTwo'),
        1754 : new E3.O3ERawCodec(132, 'TimeSeriesRecordedFlowTemperatureSensorStepsAndDurationThree'),
        1759 : new E3.O3ERawCodec(40, 'TimeSeriesRecordedDomesticHotWaterOutletTemperature'),
        1760 : new E3.O3ERawCodec(40, 'TimeSeriesRecordedCombustionAirInletTemperature'),
        1761 : new E3.O3ERawCodec(40, 'TimeSeriesRecordedCentralHeatingPumpSpeed'),
        1762 : new E3.O3ERawCodec(1, 'LowWaterCutOffSignalInput'),
        1763 : new E3.O3ERawCodec(1, 'LowGasPressureSignalInput'),
        1764 : new E3.O3ERawCodec(1, 'HighGasPressureSignalInput'),
        1765 : new E3.O3ERawCodec(2, 'CombustionAirInterlock'),
        1768 : new E3.O3EComplexType(9, 'ReceiverTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        1769 : new E3.O3EComplexType(9, 'PrimaryInletTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        1770 : new E3.O3EComplexType(9, 'SecondaryOutletTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        1771 : new E3.O3EComplexType(9, 'EngineRoomTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        1772 : new E3.O3EComplexType(9, 'CompressorOilTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        1773 : new E3.O3EByteVal(1, 'RefrigerantCircuitFourWayValve'),
        1774 : new E3.O3EByteVal(1, 'CompressorCrankCaseHeater'),
        1775 : new E3.O3EByteVal(1, 'PrimaryCircuitFanOne'),
        1776 : new E3.O3EByteVal(1, 'PrimaryCircuitFanTwo'),
        1777 : new E3.O3ERawCodec(176, 'TimeSeriesRecordedFlueGasTemperatureSensorStepsAndDurationOne'),
        1778 : new E3.O3ERawCodec(176, 'TimeSeriesRecordedFlueGasTemperatureSensorStepsAndDurationTwo'),
        1779 : new E3.O3ERawCodec(132, 'TimeSeriesRecordedFlueGasTemperatureSensorStepsAndDurationThree'),
        1780 : new E3.O3ERawCodec(80, 'TimeSeriesRecordedIgnitionTimeSteps'),
        1781 : new E3.O3ERawCodec(16, 'TimeSeriesRecordedCalibrationCount'),
        1782 : new E3.O3ERawCodec(56, 'TimeSeriesRecordedMonitoringIonizationMaximum'),
        1783 : new E3.O3ERawCodec(120, 'TimeSeriesRecordedHeatingBurnerStopEvents'),
        1784 : new E3.O3ERawCodec(120, 'TimeSeriesRecordedDomesticHotWaterBurnerStopEvents'),
        1785 : new E3.O3ERawCodec(40, 'TimeSeriesRecordedFlameLossModulation'),
        1786 : new E3.O3ERawCodec(52, 'TimeSeriesRecordedWaterPressureStagnation'),
        1787 : new E3.O3ERawCodec(32, 'TimeSeriesRecordedWaterPressurePeaks'),
        1788 : new E3.O3ERawCodec(8, 'CanInterfaceVersion'),
        1791 : new E3.O3EByteVal(1, 'DiverterValveDefaultPositionConfiguration'),
        1792 : new E3.O3ERawCodec(1, 'ResetElectricalEnergyHistory'),
        1793 : new E3.O3ERawCodec(1, 'BurnerPreconditions'),
        1794 : new E3.O3ERawCodec(4, 'HeatingCircuitHeatDeficit'),
        1795 : new E3.O3ERawCodec(1, 'FuelCellRuntimePrediction'),
        1796 : new E3.O3ERawCodec(2, 'DomesticElectricalEnergyConsumption'),
        1797 : new E3.O3ERawCodec(2, 'PredictionDomesticElectricalEnergyConsumptionNextHour'),
        1798 : new E3.O3ERawCodec(1, 'FuelCellHoursTillNextStart'),
        1799 : new E3.O3ERawCodec(2, 'PrimaryCircuitCurrentTemperatureSetpoint'),
        1800 : new E3.O3ERawCodec(4, 'ResetTimeSeriesRecordingGroups'),
        1801 : new E3.O3EComplexType(40, 'ElectricalEnergyStorageEnergyTransferStatistic', [new E3.O3EInt32(4, 'BatteryChargeToday', {scale:1.0}), new E3.O3EInt32(4, 'BatteryChargeWeek', {scale:1.0}), new E3.O3EInt32(4, 'BatteryChargeMonth', {scale:1.0}), new E3.O3EInt32(4, 'BatteryChargeYear', {scale:1.0}), new E3.O3EInt32(4, 'BatteryChargeTotal', {scale:1.0}), new E3.O3EInt32(4, 'BatteryDischargeToday', {scale:1.0}), new E3.O3EInt32(4, 'BatteryDischargeWeek', {scale:1.0}), new E3.O3EInt32(4, 'BatteryDischargeMonth', {scale:1.0}), new E3.O3EInt32(4, 'BatteryDischargeYear', {scale:1.0}), new E3.O3EInt32(4, 'BatteryDischargeTotal', {scale:1.0})]),
        1802 : new E3.O3EComplexType(80, 'EnergyProductionPhotovoltaic', [new E3.O3EInt32(4, 'PhotovoltaicProductionToday'), new E3.O3EInt32(4, 'PhotovoltaicProductionWeek'), new E3.O3EInt32(4, 'PhotovoltaicProductionMonth'), new E3.O3EInt32(4, 'PhotovoltaicProductionYear'), new E3.O3EInt32(4, 'PhotovoltaicProductionTotal'), new E3.O3EInt32(4, 'PhotovoltaicProductionToday1'), new E3.O3EInt32(4, 'PhotovoltaicProductionWeek1'), new E3.O3EInt32(4, 'PhotovoltaicProductionMonth1'), new E3.O3EInt32(4, 'PhotovoltaicProductionYear1'), new E3.O3EInt32(4, 'PhotovoltaicProductionTotal1'), new E3.O3EInt32(4, 'PhotovoltaicProductionToday2'), new E3.O3EInt32(4, 'PhotovoltaicProductionWeek2'), new E3.O3EInt32(4, 'PhotovoltaicProductionMonth2'), new E3.O3EInt32(4, 'PhotovoltaicProductionYear2'), new E3.O3EInt32(4, 'PhotovoltaicProductionTotal2'), new E3.O3EInt32(4, 'PhotovoltaicProductionToday3'), new E3.O3EInt32(4, 'PhotovoltaicProductionWeek3'), new E3.O3EInt32(4, 'PhotovoltaicProductionMonth3'), new E3.O3EInt32(4, 'PhotovoltaicProductionYear3'), new E3.O3EInt32(4, 'PhotovoltaicProductionTotal3')]),
        1807 : new E3.O3ERawCodec(10, 'ElectricalEnergyInverterDcInputOne'),
        1808 : new E3.O3ERawCodec(10, 'ElectricalEnergyInverterDcInputTwo'),
        1809 : new E3.O3ERawCodec(10, 'ElectricalEnergyInverterDcInputThree'),
        1810 : new E3.O3EComplexType(4, 'ElectricalEnergyInverterPowerAc', [new E3.O3EInt16(2, 'ActivePower', {scale:1.0, signed:true}), new E3.O3EInt16(2, 'ReactivePower', {scale:1.0, signed:true})]),
        1811 : new E3.O3ERawCodec(1, 'ElectricalEnergyStorageModuleSetUpCheck'),
        1812 : new E3.O3ERawCodec(2, 'PointOfCommonCouplingConfiguredEnergyMeter'),
        1813 : new E3.O3EInt8(1, 'EnhancedVapourInjectionValve'),
        1814 : new E3.O3ERawCodec(5, 'ReceiverLiquidLevelSensor'),
        1815 : new E3.O3EInt8(1, 'ElectricalHeaterPhaseOne'),
        1816 : new E3.O3EInt8(1, 'ElectricalHeaterPhaseTwo'),
        1817 : new E3.O3EInt8(1, 'ElectricalHeaterPhaseThree'),
        1819 : new E3.O3EByteVal(1, 'SolarPumpConfigurationSelection'),
        1822 : new E3.O3ERawCodec(51, 'ThreePhaseInverterCurrent'),
        1823 : new E3.O3ERawCodec(27, 'ThreePhaseInverterVoltage'),
        1824 : new E3.O3EComplexType(16, 'ThreePhaseInverterCurrentPower', [new E3.O3EInt32(4, 'cumulated', {scale:1}), new E3.O3EInt32(4, 'L1', {scale:1}), new E3.O3EInt32(4, 'L2', {scale:1}), new E3.O3EInt32(4, 'L3', {scale:1})]),
        1825 : new E3.O3EComplexType(16, 'ThreePhaseInverterCurrentApparentPower', [new E3.O3EInt32(4, 'cumulated', {scale:1}), new E3.O3EInt32(4, 'L1', {scale:1}), new E3.O3EInt32(4, 'L2', {scale:1}), new E3.O3EInt32(4, 'L3', {scale:1})]),
        1826 : new E3.O3EInt16(4, 'ThreePhaseInverterMaximunNominalPower', {scale:1.0}),
        1827 : new E3.O3EInt16(4, 'InverterElectricalEnergyStorageMaximumNominalChargePower', {scale:1.0}),
        1828 : new E3.O3EInt16(4, 'InverterElectricalEnergyStorageCurrentMaximumlChargePower', {scale:1.0}),
        1829 : new E3.O3EInt16(4, 'InverterElectricalEnergyStorageMaximumNominalDischargePower', {scale:1.0}),
        1830 : new E3.O3EInt16(4, 'InverterElectricalEnergyStorageCurrentMaximumlDishargePower', {scale:1.0}),
        1831 : new E3.O3EComplexType(12, 'PhotovoltaicCurrentStringPower', [new E3.O3EInt32(4, 'String1', {scale:1.0}), new E3.O3EInt32(4, 'String2', {scale:1.0}), new E3.O3EInt32(4, 'String3', {scale:1.0})]),
        1832 : new E3.O3EComplexType(12, 'PhotovoltaicStringCurrent', [new E3.O3EInt32(4, 'String1', {scale:1.0}), new E3.O3EInt32(4, 'String2', {scale:1.0}), new E3.O3EInt32(4, 'String3', {scale:1.0})]),
        1833 : new E3.O3EComplexType(12, 'PhotovoltaicStringVoltage', [new E3.O3EInt32(4, 'String1', {scale:1000.0}), new E3.O3EInt32(4, 'String2', {scale:1000.0}), new E3.O3EInt32(4, 'String3', {scale:1000.0})]),
        1834 : new E3.O3EComplexType(4, 'ElectricalEnergyStorageStateOfEnergy', [new E3.O3EInt16(2, 'SoC', {scale:1.0, signed:false}), new E3.O3EInt16(2, 'Unkown', {scale:1.0, signed:false})]),
        1835 : new E3.O3ERawCodec(20, 'ManufacturerProperties'),
        1836 : new E3.O3EInt32(4, 'ElectricalEnergyStorageCurrentPower', {scale:1.0, signed:true}),
        1837 : new E3.O3EInt16(4, 'ElectricalEnergyStorageCurrent', {scale:1.0}),
        1838 : new E3.O3EInt8(2, 'ElectricalEnergyStorageVoltage'),
        1839 : new E3.O3ERawCodec(4, 'ElectricalEnergyStorageUsableEnergy'),
        1840 : new E3.O3ERawCodec(4, 'ElectricalEnergyStorageUsableNominalEnergy'),
        1841 : new E3.O3ERawCodec(32, 'PointOfCommonCouplingOverview'),
        1842 : new E3.O3ERawCodec(2, 'SecondaryCircuitFourThreeWayValve'),
        1843 : new E3.O3ERawCodec(2, 'MixerOneCircuitHumidityProtection'),
        1844 : new E3.O3ERawCodec(2, 'MixerTwoCircuitHumidityProtection'),
        1845 : new E3.O3ERawCodec(36, 'HeatPumpCompressorEnvelope'),
        1846 : new E3.O3ERawCodec(4, 'HeatPumpCompressorCurrentOperatingPoint'),
        1884 : new E3.O3ERawCodec(84, 'RoomOneProperty'),
        1887 : new E3.O3ERawCodec(84, 'RoomTwoProperty'),
        1890 : new E3.O3ERawCodec(84, 'RoomThreeProperty'),
        1893 : new E3.O3ERawCodec(84, 'RoomFourProperty'),
        1896 : new E3.O3ERawCodec(84, 'RoomFiveProperty'),
        1899 : new E3.O3ERawCodec(84, 'RoomSixProperty'),
        1902 : new E3.O3ERawCodec(84, 'RoomSevenProperty'),
        1905 : new E3.O3ERawCodec(84, 'RoomEightProperty'),
        1908 : new E3.O3ERawCodec(84, 'RoomNineProperty'),
        1911 : new E3.O3ERawCodec(84, 'RoomTenProperty'),
        1914 : new E3.O3ERawCodec(84, 'RoomElevenProperty'),
        1917 : new E3.O3ERawCodec(84, 'RoomTwelveProperty'),
        1920 : new E3.O3ERawCodec(84, 'RoomThirteenProperty'),
        1923 : new E3.O3ERawCodec(84, 'RoomFourteenProperty'),
        1926 : new E3.O3ERawCodec(84, 'RoomFifteenProperty'),
        1929 : new E3.O3ERawCodec(84, 'RoomSixteenProperty'),
        1932 : new E3.O3ERawCodec(84, 'RoomSeventeenProperty'),
        1935 : new E3.O3ERawCodec(84, 'RoomEighteenProperty'),
        1938 : new E3.O3ERawCodec(84, 'RoomNineteenProperty'),
        1941 : new E3.O3ERawCodec(84, 'RoomTwentyProperty'),
        2084 : new E3.O3ERawCodec(84, 'ZigBeeOneDeviceProperty'),
        2085 : new E3.O3ERawCodec(13, 'ZigBeeOneDeviceSetpoint'),
        2086 : new E3.O3ERawCodec(57, 'ZigBeeOneDeviceCurrentValues'),
        2087 : new E3.O3ERawCodec(84, 'ZigBeeTwoDeviceProperty'),
        2088 : new E3.O3ERawCodec(13, 'ZigBeeTwoDeviceSetpoint'),
        2089 : new E3.O3ERawCodec(57, 'ZigBeeTwoDeviceCurrentValues'),
        2090 : new E3.O3ERawCodec(84, 'ZigBeeThreeDeviceProperty'),
        2091 : new E3.O3ERawCodec(13, 'ZigBeeThreeDeviceSetpoint'),
        2092 : new E3.O3ERawCodec(57, 'ZigBeeThreeDeviceCurrentValues'),
        2093 : new E3.O3ERawCodec(84, 'ZigBeeFourDeviceProperty'),
        2094 : new E3.O3ERawCodec(13, 'ZigBeeFourDeviceSetpoint'),
        2095 : new E3.O3ERawCodec(57, 'ZigBeeFourDeviceCurrentValues'),
        2096 : new E3.O3ERawCodec(84, 'ZigBeeFiveDeviceProperty'),
        2097 : new E3.O3ERawCodec(13, 'ZigBeeFiveDeviceSetpoint'),
        2098 : new E3.O3ERawCodec(57, 'ZigBeeFiveDeviceCurrentValues'),
        2099 : new E3.O3ERawCodec(84, 'ZigBeeSixDeviceProperty'),
        2100 : new E3.O3ERawCodec(13, 'ZigBeeSixDeviceSetpoint'),
        2101 : new E3.O3ERawCodec(57, 'ZigBeeSixDeviceCurrentValues'),
        2102 : new E3.O3ERawCodec(84, 'ZigBeeSevenDeviceProperty'),
        2103 : new E3.O3ERawCodec(13, 'ZigBeeSevenDeviceSetpoint'),
        2104 : new E3.O3ERawCodec(57, 'ZigBeeSevenDeviceCurrentValues'),
        2105 : new E3.O3ERawCodec(84, 'ZigBeeEightDeviceProperty'),
        2106 : new E3.O3ERawCodec(13, 'ZigBeeEightDeviceSetpoint'),
        2107 : new E3.O3ERawCodec(57, 'ZigBeeEightDeviceCurrentValues'),
        2108 : new E3.O3ERawCodec(84, 'ZigBeeNineDeviceProperty'),
        2109 : new E3.O3ERawCodec(13, 'ZigBeeNineDeviceSetpoint'),
        2110 : new E3.O3ERawCodec(57, 'ZigBeeNineDeviceCurrentValues'),
        2111 : new E3.O3ERawCodec(84, 'ZigBeeTenDeviceProperty'),
        2112 : new E3.O3ERawCodec(13, 'ZigBeeTenDeviceSetpoint'),
        2113 : new E3.O3ERawCodec(57, 'ZigBeeTenDeviceCurrentValues'),
        2114 : new E3.O3ERawCodec(84, 'ZigBeeElevenDeviceProperty'),
        2115 : new E3.O3ERawCodec(13, 'ZigBeeElevenDeviceSetpoint'),
        2116 : new E3.O3ERawCodec(57, 'ZigBeeElevenDeviceCurrentValues'),
        2117 : new E3.O3ERawCodec(84, 'ZigBeeTwelveDeviceProperty'),
        2118 : new E3.O3ERawCodec(13, 'ZigBeeTwelveDeviceSetpoint'),
        2119 : new E3.O3ERawCodec(57, 'ZigBeeTwelveDeviceCurrentValues'),
        2120 : new E3.O3ERawCodec(84, 'ZigBeeThirteenDeviceProperty'),
        2121 : new E3.O3ERawCodec(13, 'ZigBeeThirteenDeviceSetpoint'),
        2122 : new E3.O3ERawCodec(57, 'ZigBeeThirteenDeviceCurrentValues'),
        2123 : new E3.O3ERawCodec(84, 'ZigBeeFourteenDeviceProperty'),
        2124 : new E3.O3ERawCodec(13, 'ZigBeeFourteenDeviceSetpoint'),
        2125 : new E3.O3ERawCodec(57, 'ZigBeeFourteenDeviceCurrentValues'),
        2126 : new E3.O3ERawCodec(84, 'ZigBeeFifteenDeviceProperty'),
        2127 : new E3.O3ERawCodec(13, 'ZigBeeFifteenDeviceSetpoint'),
        2128 : new E3.O3ERawCodec(57, 'ZigBeeFifteenDeviceCurrentValues'),
        2129 : new E3.O3ERawCodec(84, 'ZigBeeSixteenDeviceProperty'),
        2130 : new E3.O3ERawCodec(13, 'ZigBeeSixteenDeviceSetpoint'),
        2131 : new E3.O3ERawCodec(57, 'ZigBeeSixteenDeviceCurrentValues'),
        2132 : new E3.O3ERawCodec(84, 'ZigBeeSeventeenDeviceProperty'),
        2133 : new E3.O3ERawCodec(13, 'ZigBeeSeventeenDeviceSetpoint'),
        2134 : new E3.O3ERawCodec(57, 'ZigBeeSeventeenDeviceCurrentValues'),
        2135 : new E3.O3ERawCodec(84, 'ZigBeeEighteenDeviceProperty'),
        2136 : new E3.O3ERawCodec(13, 'ZigBeeEighteenDeviceSetpoint'),
        2137 : new E3.O3ERawCodec(57, 'ZigBeeEighteenDeviceCurrentValues'),
        2138 : new E3.O3ERawCodec(84, 'ZigBeeNineteenDeviceProperty'),
        2139 : new E3.O3ERawCodec(13, 'ZigBeeNineteenDeviceSetpoint'),
        2140 : new E3.O3ERawCodec(57, 'ZigBeeNineteenDeviceCurrentValues'),
        2141 : new E3.O3ERawCodec(84, 'ZigBeeTwentyDeviceProperty'),
        2142 : new E3.O3ERawCodec(13, 'ZigBeeTwentyDeviceSetpoint'),
        2143 : new E3.O3ERawCodec(57, 'ZigBeeTwentyDeviceCurrentValues'),
        2144 : new E3.O3ERawCodec(16, 'PointOfCommonCouplingAcActiveCurrent'),
        2158 : new E3.O3ERawCodec(16, 'ActivatedFeatures'),
        2164 : new E3.O3EByteVal(1, 'DeviceDigitalInputSixValue'),
        2165 : new E3.O3EInt8(1, 'DevicePwmOutputThreeValue'),
        2166 : new E3.O3ERawCodec(1, 'MixerOneCircuitExternalHookupDemandInput'),
        2167 : new E3.O3ERawCodec(1, 'MixerTwoCircuitExternalHookupDemandInput'),
        2168 : new E3.O3ERawCodec(1, 'MixerThreeCircuitExternalHookupDemandInput'),
        2169 : new E3.O3ERawCodec(1, 'MixerFourCircuitExternalHookupDemandInput'),
        2184 : new E3.O3ERawCodec(2, 'BackupBoxTest'),
        2188 : new E3.O3ERawCodec(6, 'PointOfCommonCouplingSetActivePowerTotal'),
        2189 : new E3.O3ERawCodec(104, 'EebusDeviceListTwo'),
        2190 : new E3.O3ERawCodec(104, 'EebusDeviceListThree'),
        2191 : new E3.O3ERawCodec(104, 'EebusDeviceListFour'),
        2192 : new E3.O3ERawCodec(104, 'EebusDeviceListFive'),
        2214 : new E3.O3ERawCodec(2, 'BackupBoxConfiguration'),
        2217 : new E3.O3ERawCodec(1, 'InputDemandSideManagementlReceiver'),
        2218 : new E3.O3ERawCodec(4, 'RemoteLimitValueDemandSideManagement'),
        2219 : new E3.O3ERawCodec(1, 'BatteryCalibration'),
        2220 : new E3.O3ERawCodec(1, 'BatteryReactivePowerMode'),
        2221 : new E3.O3ERawCodec(3, 'BatteryReactivePowerFixCosinusPhi'),
        2222 : new E3.O3ERawCodec(18, 'BatteryReactivePower'),
        2223 : new E3.O3ERawCodec(15, 'BatteryReactivePowerCosinusPhi'),
        2224 : new E3.O3ERawCodec(16, 'PhotovoltaicsActivePowerLimitation'),
        2225 : new E3.O3ERawCodec(12, 'ElectricEnergyStorageSetpoint'),
        2226 : new E3.O3ERawCodec(12, 'ElectricEnergyStorageMaximum'),
        2229 : new E3.O3ERawCodec(1, 'ThermostatTerminalOneFunction'),
        2230 : new E3.O3ERawCodec(1, 'ThermostatTerminalTwoFunction'),
        2231 : new E3.O3ERawCodec(1, 'ThermostatTerminalThreeFunction'),
        2233 : new E3.O3EByteVal(1, 'PersistentStorageStatus'),
        2234 : new E3.O3ERawCodec(27, 'PowerGridCodeSettingsNormOne'),
        2235 : new E3.O3ERawCodec(65, 'CascadeSystemConfiguration'),
        2236 : new E3.O3ERawCodec(10, 'CascadeDeviceSetpoint'),
        2237 : new E3.O3ERawCodec(18, 'CascadeDeviceStatus'),
        2239 : new E3.O3ERawCodec(1, 'ElectricEnergyStorageControlMode'),
        2240 : new E3.O3ERawCodec(9, 'BatteryTemperatureSensor'),
        2241 : new E3.O3ERawCodec(1, 'OutsideTemperatureSensorSource'),
        2242 : new E3.O3ERawCodec(27, 'PowerGridCodeSettingsNormTwo'),
        2244 : new E3.O3ERawCodec(27, 'PowerGridCodeSettingsNormFour'),
        2246 : new E3.O3ERawCodec(26, 'FixReactivePowerIn'),
        2247 : new E3.O3EComplexType(12, 'FilterRuntime',[new E3.O3EInt32(4, 'Actual', {scale:1.0}), new E3.O3EInt32(4, 'Remaining', {scale:1.0}), new E3.O3EInt32(4, 'Overdue', {scale:1.0})]),
        2248 : new E3.O3EByteVal(1, 'CurrentVentilationHeatRecovery'),
        2249 : new E3.O3ERawCodec(8, 'DigitalSwitchSettingOne'),
        2250 : new E3.O3ERawCodec(8, 'DigitalSwitchSettingTwo'),
        2251 : new E3.O3ERawCodec(8, 'LedStatusOne'),
        2252 : new E3.O3ERawCodec(8, 'LedStatusTwo'),
        2253 : new E3.O3EByteVal(1, 'DeviceDigitalInputSevenValue'),
        2254 : new E3.O3ERawCodec(1, 'PowerGridCodeSettingConfiguration'),
        2255 : new E3.O3EInt16(2, 'MinimumSecondaryReturnTemperatureRefrigerantCircuit', {signed:true}),
        2256 : new E3.O3EInt16(2, 'DesiredThermalEnergyDefrost'),
        2257 : new E3.O3EInt16(2, 'DomesticHotWaterTemperatureSetpointOffset', {signed:true}),
        2259 : new E3.O3EByteVal(1, 'RefrigerationCircuitStatus'),
        2260 : new E3.O3ERawCodec(84, 'ZigBeeTwentyOneDeviceProperty'),
        2261 : new E3.O3ERawCodec(13, 'ZigBeeTwentyOneDeviceSetpoint'),
        2262 : new E3.O3ERawCodec(57, 'ZigBeeTwentyOneDeviceCurrentValues'),
        2263 : new E3.O3ERawCodec(84, 'ZigBeeTwentyTwoDeviceProperty'),
        2264 : new E3.O3ERawCodec(13, 'ZigBeeTwentyTwoDeviceSetpoint'),
        2265 : new E3.O3ERawCodec(57, 'ZigBeeTwentyTwoDeviceCurrentValues'),
        2266 : new E3.O3ERawCodec(84, 'ZigBeeTwentyThreeDeviceProperty'),
        2267 : new E3.O3ERawCodec(13, 'ZigBeeTwentyThreeDeviceSetpoint'),
        2268 : new E3.O3ERawCodec(57, 'ZigBeeTwentyThreeDeviceCurrentValues'),
        2269 : new E3.O3ERawCodec(84, 'ZigBeeTwentyFourDeviceProperty'),
        2270 : new E3.O3ERawCodec(13, 'ZigBeeTwentyFourDeviceSetpoint'),
        2271 : new E3.O3ERawCodec(57, 'ZigBeeTwentyFourDeviceCurrentValues'),
        2272 : new E3.O3ERawCodec(84, 'ZigBeeTwentyFiveDeviceProperty'),
        2273 : new E3.O3ERawCodec(13, 'ZigBeeTwentyFiveDeviceSetpoint'),
        2274 : new E3.O3ERawCodec(57, 'ZigBeeTwentyFiveDeviceCurrentValues'),
        2275 : new E3.O3ERawCodec(84, 'ZigBeeTwentySixDeviceProperty'),
        2276 : new E3.O3ERawCodec(13, 'ZigBeeTwentySixDeviceSetpoint'),
        2277 : new E3.O3ERawCodec(57, 'ZigBeeTwentySixDeviceCurrentValues'),
        2278 : new E3.O3ERawCodec(84, 'ZigBeeTwentySevenDeviceProperty'),
        2279 : new E3.O3ERawCodec(13, 'ZigBeeTwentySevenDeviceSetpoint'),
        2280 : new E3.O3ERawCodec(57, 'ZigBeeTwentySevenDeviceCurrentValues'),
        2281 : new E3.O3ERawCodec(84, 'ZigBeeTwentyEightDeviceProperty'),
        2282 : new E3.O3ERawCodec(13, 'ZigBeeTwentyEightDeviceSetpoint'),
        2283 : new E3.O3ERawCodec(57, 'ZigBeeTwentyEightDeviceCurrentValues'),
        2284 : new E3.O3ERawCodec(84, 'ZigBeeTwentyNineDeviceProperty'),
        2285 : new E3.O3ERawCodec(13, 'ZigBeeTwentyNineDeviceSetpoint'),
        2286 : new E3.O3ERawCodec(57, 'ZigBeeTwentyNineDeviceCurrentValues'),
        2287 : new E3.O3ERawCodec(84, 'ZigBeeThirtyDeviceProperty'),
        2288 : new E3.O3ERawCodec(13, 'ZigBeeThirtyDeviceSetpoint'),
        2289 : new E3.O3ERawCodec(57, 'ZigBeeThirtyDeviceCurrentValues'),
        2290 : new E3.O3ERawCodec(84, 'ZigBeeThirtyOneDeviceProperty'),
        2291 : new E3.O3ERawCodec(13, 'ZigBeeThirtyOneDeviceSetpoint'),
        2292 : new E3.O3ERawCodec(57, 'ZigBeeThirtyOneDeviceCurrentValues'),
        2293 : new E3.O3ERawCodec(84, 'ZigBeeThirtyTwoDeviceProperty'),
        2294 : new E3.O3ERawCodec(13, 'ZigBeeThirtyTwoDeviceSetpoint'),
        2295 : new E3.O3ERawCodec(57, 'ZigBeeThirtyTwoDeviceCurrentValues'),
        2296 : new E3.O3ERawCodec(84, 'ZigBeeThirtyThreeDeviceProperty'),
        2297 : new E3.O3ERawCodec(13, 'ZigBeeThirtyThreeDeviceSetpoint'),
        2298 : new E3.O3ERawCodec(57, 'ZigBeeThirtyThreeDeviceCurrentValues'),
        2299 : new E3.O3ERawCodec(84, 'ZigBeeThirtyFourDeviceProperty'),
        2300 : new E3.O3ERawCodec(13, 'ZigBeeThirtyFourDeviceSetpoint'),
        2301 : new E3.O3ERawCodec(57, 'ZigBeeThirtyFourDeviceCurrentValues'),
        2302 : new E3.O3ERawCodec(84, 'ZigBeeThirtyFiveDeviceProperty'),
        2303 : new E3.O3ERawCodec(13, 'ZigBeeThirtyFiveDeviceSetpoint'),
        2304 : new E3.O3ERawCodec(57, 'ZigBeeThirtyFiveDeviceCurrentValues'),
        2305 : new E3.O3ERawCodec(84, 'ZigBeeThirtySixDeviceProperty'),
        2306 : new E3.O3ERawCodec(13, 'ZigBeeThirtySixDeviceSetpoint'),
        2307 : new E3.O3ERawCodec(57, 'ZigBeeThirtySixDeviceCurrentValues'),
        2308 : new E3.O3ERawCodec(84, 'ZigBeeThirtySevenDeviceProperty'),
        2309 : new E3.O3ERawCodec(13, 'ZigBeeThirtySevenDeviceSetpoint'),
        2310 : new E3.O3ERawCodec(57, 'ZigBeeThirtySevenDeviceCurrentValues'),
        2311 : new E3.O3ERawCodec(84, 'ZigBeeThirtyEightDeviceProperty'),
        2312 : new E3.O3ERawCodec(13, 'ZigBeeThirtyEightDeviceSetpoint'),
        2313 : new E3.O3ERawCodec(57, 'ZigBeeThirtyEightDeviceCurrentValues'),
        2314 : new E3.O3ERawCodec(84, 'ZigBeeThirtyNineDeviceProperty'),
        2315 : new E3.O3ERawCodec(13, 'ZigBeeThirtyNineDeviceSetpoint'),
        2316 : new E3.O3ERawCodec(57, 'ZigBeeThirtyNineDeviceCurrentValues'),
        2317 : new E3.O3ERawCodec(84, 'ZigBeeFourtyDeviceProperty'),
        2318 : new E3.O3ERawCodec(13, 'ZigBeeFourtyDeviceSetpoint'),
        2319 : new E3.O3ERawCodec(57, 'ZigBeeFourtyDeviceCurrentValues'),
        2320 : new E3.O3EByteVal(1, 'DomesticHotWaterStatus'),
        2327 : new E3.O3EComplexType(4, 'VentilationTargetVolumeFlow',[new E3.O3EInt16(2, 'ActualFlow', {scale:1.0}), new E3.O3EInt16(2, '?1', {scale:1.0})]),
        2328 : new E3.O3EComplexType(4, 'VentilationCurrentVolumeFlow',[new E3.O3EInt16(2, 'TargetFlow', {scale:1.0}), new E3.O3EInt16(2, '?1', {scale:1.0})]),
        2329 : new E3.O3ERawCodec(14, 'BatteryEnergyUsedAverage'),
        2330 : new E3.O3EEnum(1, 'GenericDigitalInputConfigurationOnBoardTwo', 'DigitalInputConfigurations'),
        2331 : new E3.O3EEnum(1, 'GenericDigitalInputConfigurationOnBoardThree', 'DigitalInputConfigurations'),
        2332 : new E3.O3EEnum(1, 'GenericDigitalInputConfigurationOnBoardFour', 'DigitalInputConfigurations'),
        2333 : new E3.O3EComplexType(9, 'EconomizerLiquidTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        2334 : new E3.O3EComplexType(9, 'EvaporatorVaporTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        2336 : new E3.O3EComplexType(9, 'ControllerBoardTemperatureSensor',[new E3.O3EInt16(2, 'Sensor1', {scale:10}), new E3.O3EInt16(2, 'Sensor2', {scale:10}), new E3.O3ERawCodec(5, '?1')]),
        2337 : new E3.O3ERawCodec(1, 'UltraLowNitroOxideStatusActive'),
        2338 : new E3.O3ERawCodec(3, 'HighLimitTestMode'),
        2339 : new E3.O3ERawCodec(2, 'SafetyLimiterThresholdTemperature'),
        2340 : new E3.O3ERawCodec(2, 'ElectricalHeaterConfiguration'),
        2341 : new E3.O3ERawCodec(4, 'CoefficientOfPerformanceConfiguration'),
        2342 : new E3.O3EInt16(4, 'NominalThermalCapacityHeating', {scale:1}),
        2343 : new E3.O3EInt16(4, 'NominalThermalCapacityCooling', {scale:1}),
        2344 : new E3.O3ERawCodec(1, 'CombustionAirInterlockSettings'),
        2345 : new E3.O3EInt8(1, 'CompressorSetpointPercent'),
        2346 : new E3.O3EInt8(1, 'CompressorSpeedPercent'),
        2348 : new E3.O3ERawCodec(8, 'PhotovoltaicsActivePowerLimitationEnergyManagementSystem'),
        2349 : new E3.O3ERawCodec(8, 'PhotovoltaicsActivePowerLimitationFallbackEnergyManagementSystem'),
        2350 : new E3.O3EByteVal(1, 'EnergyManagmentSystemResultingControlState'),
        2351 : new E3.O3EInt8(2, 'HeatPumpCompressor', {offset :0}),
        2352 : new E3.O3ERawCodec(2, 'AdditionalElectricHeater'),
        2353 : new E3.O3ERawCodec(4, 'TargetDemandHeatProducer'),
        2355 : new E3.O3EComplexType(4, 'MinimumVentilationSupplyAirTemperature',[new E3.O3EInt16(2, 'Sensor1', {scale:10}), new E3.O3EInt16(2, 'Sensor2', {scale:10})]),
        2356 : new E3.O3EInt8(1, 'CurrentSystemHeatingCoolingLevel'),
        2369 : new E3.O3ECompStat(14, 'HeatPumpCompressorStatistical'),
        2370 : new E3.O3EAddElHeaterStat(11, 'AdditionalElectricHeaterStatistical'),
        2371 : new E3.O3EComplexType(2, 'VentilationControlMode',[new E3.O3EByteVal(1, 'Mode'), new E3.O3ERawCodec(1, '?1')]),
        2372 : new E3.O3EComplexType(2, 'VentilationControllerOperationState',[new E3.O3ERawCodec(1, '?1'), new E3.O3ERawCodec(1, '?2')]),
        2373 : new E3.O3ERawCodec(2, 'VentilationAirVolumeFlowBalancingOffset'),
        2374 : new E3.O3EByteVal(1, 'VentilationExternalLockFunctionSetting'),
        2375 : new E3.O3ERawCodec(7, 'NarrowBandInternetOfThingsConfiguration'),
        2376 : new E3.O3ERawCodec(132, 'NarrowBandInternetOfThingsRadio'),
        2377 : new E3.O3ERawCodec(45, 'EvolvedUniversalTerrestrialRadioAccessDataLinkInfo'),
        2378 : new E3.O3ERawCodec(48, 'EvolvedUniversalTerrestrialRadioAccessNeighborCells'),
        2379 : new E3.O3ERawCodec(22, 'EvolvedUniversalTerrestrialRadioAccessServingCellInfo'),
        2380 : new E3.O3ERawCodec(17, 'EvolvedUniversalTerrestrialRadioAccessServingCellMeasurements'),
        2382 : new E3.O3ERawCodec(2, 'PaddleSwitch'),
        2403 : new E3.O3EInt8(1, 'BypassOperationLevel'),
        2404 : new E3.O3ERawCodec(6, 'BivalenceControlMode'),
        2405 : new E3.O3ERawCodec(6, 'MixerOneCircuitConstantFlowSetTemperatureCooling'),
        2406 : new E3.O3ERawCodec(6, 'MixerTwoCircuitConstantFlowSetTemperatureCooling'),
        2407 : new E3.O3ERawCodec(6, 'MixerThreeCircuitConstantFlowSetTemperatureCooling'),
        2408 : new E3.O3ERawCodec(6, 'MixerFourCircuitConstantFlowSetTemperatureCooling'),
        2409 : new E3.O3ERawCodec(12, 'MixerOneCircuitMinimumMaximumFlowSetTemperatureCooling'),
        2410 : new E3.O3ERawCodec(12, 'MixerTwoCircuitMinimumMaximumFlowSetTemperatureCooling'),
        2411 : new E3.O3ERawCodec(12, 'MixerThreeCircuitMinimumMaximumFlowSetTemperatureCooling'),
        2412 : new E3.O3ERawCodec(12, 'MixerFourCircuitMinimumMaximumFlowSetTemperatureCooling'),
        2413 : new E3.O3ERawCodec(4, 'MixerOneCircuitThresholdCooling'),
        2414 : new E3.O3ERawCodec(4, 'MixerTwoCircuitThresholdCooling'),
        2415 : new E3.O3ERawCodec(4, 'MixerThreeCircuitThresholdCooling'),
        2416 : new E3.O3ERawCodec(4, 'MixerFourCircuitThresholdCooling'),
        2417 : new E3.O3ERawCodec(6, 'MixerOneCircuitTargetValueRelativeHumidityCooling'),
        2418 : new E3.O3ERawCodec(6, 'MixerTwoCircuitTargetValueRelativeHumidityCooling'),
        2419 : new E3.O3ERawCodec(6, 'MixerThreeCircuitTargetValueRelativeHumidityCooling'),
        2420 : new E3.O3ERawCodec(6, 'MixerFourCircuitTargetValueRelativeHumidityCooling'),
        2421 : new E3.O3ERawCodec(2, 'MixerOneCircuitTemperatureOffsetCooling'),
        2422 : new E3.O3ERawCodec(2, 'MixerTwoCircuitTemperatureOffsetCooling'),
        2423 : new E3.O3ERawCodec(2, 'MixerThreeCircuitTemperatureOffsetCooling'),
        2424 : new E3.O3ERawCodec(2, 'MixerFourCircuitTemperatureOffsetCooling'),
        2426 : new E3.O3EInt16(6, 'MixerOneCircuitRoomEcoFunctionSettings', {signed:true, offset:1}),
        2427 : new E3.O3EInt16(6, 'MixerTwoCircuitRoomEcoFunctionSettings', {signed:true, offset:1}),
        2428 : new E3.O3EInt16(6, 'MixerThreeCircuitRoomEcoFunctionSettings', {signed:true, offset:1}),
        2429 : new E3.O3EInt16(6, 'MixerFourCircuitRoomEcoFunctionSettings', {signed:true, offset:1}),
        2442 : new E3.O3EInt8(1, 'HeatPumpFrostProtection'),
        2445 : new E3.O3ERawCodec(2, 'SupplementalHeatEngineConfiguration'),
        2446 : new E3.O3ERawCodec(4, 'HmiWakeupTrigger'),
        2447 : new E3.O3EComplexType(4, 'SupplyAirVolumeFlowDeviceLimit',[new E3.O3EInt16(2, 'Minimum', {scale:1.0}), new E3.O3EInt16(2, 'Maximum', {scale:1.0})]),
        2448 : new E3.O3EComplexType(4, 'ExhaustAirVolumeFlowDeviceLimit',[new E3.O3EInt16(2, 'Minimum', {scale:1.0}), new E3.O3EInt16(2, 'Maximum', {scale:1.0})]),
        2449 : new E3.O3ERawCodec(2, 'CustomerSpecificDeviceName'),
        2450 : new E3.O3ERawCodec(16, 'CascadeSequenceCurrentBoiler'),
        2451 : new E3.O3ERawCodec(3, 'CascadeEmergencyOperationMode'),
        2452 : new E3.O3ERawCodec(4, 'MixerOneCircuitRoomTemperatureThresholdCooling'),
        2453 : new E3.O3ERawCodec(4, 'MixerTwoCircuitRoomTemperatureThresholdCooling'),
        2454 : new E3.O3ERawCodec(4, 'MixerThreeCircuitRoomTemperatureThresholdCooling'),
        2455 : new E3.O3ERawCodec(4, 'MixerFourCircuitRoomTemperatureThresholdCooling'),
        2457 : new E3.O3EComplexType(9, 'CalculatedOutsideTemperature', [new E3.O3EInt16(2, 'DampedActual', {signed:true}), new E3.O3EInt16(2, 'DampedMin', {signed:true}), new E3.O3EInt16(2, 'DampedMax', {signed:true}), new E3.O3EInt16(2, 'DampedAverage', {signed:true})]),
        2458 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLead'),
        2459 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagOne'),
        2460 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagTwo'),
        2461 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagThree'),
        2462 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagFour'),
        2463 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagFive'),
        2464 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagSix'),
        2465 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagSeven'),
        2466 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagEight'),
        2467 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagNine'),
        2468 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagTen'),
        2469 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagEleven'),
        2470 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagTwelve'),
        2471 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagThirteen'),
        2472 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagFourteen'),
        2473 : new E3.O3ERawCodec(18, 'CascadeDeviceStatusLagFifteen'),
        2474 : new E3.O3ERawCodec(9, 'CascadeCommonFlowTemperatureSensor'),
        2475 : new E3.O3EInt16(2, 'CascadeCommonFlowCurrentTemperatureSetpoint'),
        2476 : new E3.O3ERawCodec(21, 'EnvironmentAirQualityTargetValues'),
        2477 : new E3.O3EByteVal(1, 'EnvironmentAirQualitySensor'),
        2479 : new E3.O3ERawCodec(5, 'MixerOneCircuitRoomAirHumiditySensor'),
        2480 : new E3.O3ERawCodec(5, 'MixerTwoCircuitRoomAirHumiditySensor'),
        2481 : new E3.O3ERawCodec(5, 'MixerThreeCircuitRoomAirHumiditySensor'),
        2482 : new E3.O3ERawCodec(5, 'MixerFourCircuitRoomAirHumiditySensor'),
        2484 : new E3.O3ERawCodec(8, 'ElectricalPowerRangeMetaData'),
        2486 : new E3.O3EInt16(4, 'CurrentElectricalPowerConsumptionRefrigerantCircuit', {scale:1}),
        2487 : new E3.O3EInt16(4, 'CurrentElectricalPowerConsumptionElectricHeater', {scale:1}),
        2488 : new E3.O3EInt16(4, 'CurrentElectricalPowerConsumptionSystem', {scale:1}),
        2489 : new E3.O3ERawCodec(3, 'FrostProtectionStatus'),
        2490 : new E3.O3ERawCodec(1, 'StartUpWizardState'),
        2491 : new E3.O3ERawCodec(1, 'DomesticHotWaterDemandInput'),
        2493 : new E3.O3ERawCodec(2, 'VentilationBypassPosition'),
        2494 : new E3.O3EInt16(4, 'CurrentThermalCapacityRefrigerantCircuit', {scale:1}),
        2495 : new E3.O3EInt16(4, 'CurrentThermalCapacityElectricHeater', {scale:1}),
        2496 : new E3.O3EInt16(4, 'CurrentThermalCapacitySystem', {scale:1}),
        2497 : new E3.O3ERawCodec(3, 'ResetStatisticalValuesDate'),
        2498 : new E3.O3EByteVal(1, 'CentralHeatingPumpType'),
        2499 : new E3.O3EByteVal(1, 'MixerOneCircuitPumpType'),
        2500 : new E3.O3EByteVal(1, 'MixerTwoCircuitPumpType'),
        2501 : new E3.O3EByteVal(1, 'MixerThreeCircuitPumpType'),
        2502 : new E3.O3EByteVal(1, 'MixerFourCircuitPumpType'),
        2515 : new E3.O3ERawCodec(124, 'EnergyConsumptionDomesticHotWaterMonthMatrixElectricHeater'),
        2516 : new E3.O3ERawCodec(96, 'EnergyConsumptionDomesticHotWaterYearMatrixElectricHeater'),
        2517 : new E3.O3ERawCodec(24, 'EnergyConsumptionDomesticHotWaterElectricHeater'),
        2524 : new E3.O3ERawCodec(124, 'EnergyConsumptionCentralHeatingMonthMatrixElectricHeater'),
        2525 : new E3.O3ERawCodec(96, 'EnergyConsumptionCentralHeatingYearMatrixElectricHeater'),
        2526 : new E3.O3ERawCodec(24, 'EnergyConsumptionCentralHeatingElectricHeater'),
        2527 : new E3.O3ERawCodec(124, 'GeneratedCoolingOutputMonthMatrix'),
        2528 : new E3.O3ERawCodec(96, 'GeneratedCoolingOutputYearMatrix'),
        2529 : new E3.O3ERawCodec(24, 'GeneratedCoolingOutput'),
        2533 : new E3.O3ERawCodec(27, 'PowerGridCodeSettingsNormSix'),
        2534 : new E3.O3EList(181, 'BusTopologyMatrixSix', [new E3.O3EInt8(1, 'Count'), new E3.O3EComplexType(36, 'TopologyElement',[new E3.O3EByteVal(1, 'NodeID'), new E3.O3EEnum(1, 'BusType', 'BusTypes'), new E3.O3EByteVal(1, 'DeviceProperty'), new E3.O3EByteVal(1, 'DeviceFunction'), new E3.O3ESoftVers(8, 'SW-Version'), new E3.O3ESoftVers(8, 'HW-Version'), new E3.O3EUtf8(16, 'VIN')])]),
        //        2534 : new E3.O3ERawCodec(181, "BusTopologyMatrixSix"),
        2535 : new E3.O3ERawCodec(181, 'BusTopologyMatrixSeven'),
        2536 : new E3.O3ERawCodec(181, 'BusTopologyMatrixEight'),
        2537 : new E3.O3ERawCodec(181, 'BusTopologyMatrixNine'),
        2538 : new E3.O3ERawCodec(181, 'BusTopologyMatrixTen'),
        2539 : new E3.O3ERawCodec(40, 'AlternatingCurrentEnergyStatistic'),
        2540 : new E3.O3ERawCodec(6, 'NoiseReductionSettings'),
        2541 : new E3.O3EComplexType(4, 'SupplyAirVolumeFlowConfigurationLimit',[new E3.O3EInt16(2, 'Minimum', {scale:1.0}), new E3.O3EInt16(2, 'Maximum', {scale:1.0})]),
        2542 : new E3.O3EComplexType(4, 'ExhaustAirVolumeFlowConfigurationLimit',[new E3.O3EInt16(2, 'Minimum', {scale:1.0}), new E3.O3EInt16(2, 'Maximum', {scale:1.0})]),
        2543 : new E3.O3ERawCodec(10, 'SmartGridTemperatureOffsets'),
        2544 : new E3.O3EByteVal(1, 'EnableElectricalHeaterSmartGridLock'),
        2545 : new E3.O3EByteVal(1, 'EnableElectricalHeaterSmartGridIncreaseMaxDemand'),
        2546 : new E3.O3EComplexType(9, 'MixerOneCircuitRoomTemperatureSetpointCooling', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        2547 : new E3.O3EComplexType(9, 'MixerTwoCircuitRoomTemperatureSetpointCooling', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        2548 : new E3.O3EComplexType(9, 'MixerThreeCircuitRoomTemperatureSetpointCooling', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        2549 : new E3.O3EComplexType(9, 'MixerFourCircuitRoomTemperatureSetpointCooling', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        2551 : new E3.O3ERawCodec(6, 'FlameBurnerTwo'),
        2552 : new E3.O3ERawCodec(2, 'ModulationCurrentValueBurnerTwo'),
        2553 : new E3.O3ERawCodec(12, 'HeatEngineStatisticalBurnerTwo'),
        2554 : new E3.O3ERawCodec(62, 'CellularModemIdentification'),
        2555 : new E3.O3ERawCodec(4, 'ElectricalPowerSetPoint'),
        2556 : new E3.O3ERawCodec(4, 'ElectricalEnergyRemainingCapacity'),
        2557 : new E3.O3EByteVal(1, 'HeatPumpState'),
        2558 : new E3.O3ERawCodec(3, 'HeatPumpSupportedStates'),
        2559 : new E3.O3ERawCodec(2, 'VentilationFanModbusId'),
        2560 : new E3.O3EByteVal(1, 'SmartGridFeatureSelection'),
        2563 : new E3.O3ERawCodec(91, 'ZigBeeDeviceDecoupleList'),
        2564 : new E3.O3ERawCodec(1, 'HydraulicFlapState'),
        2566 : new E3.O3EInt32(4, 'VentilationSupplyFanRuntime', {scale:1.0}),
        2567 : new E3.O3EInt32(4, 'VentilationExhaustFanRuntime', {scale:1.0}),
        2568 : new E3.O3EInt8(1, 'RefrigerantType'),
        2569 : new E3.O3EInt16(2, 'CompressorSpeedRps', {scale:10}),
        2570 : new E3.O3EInt16(2, 'CompressorModulType'),
        2571 : new E3.O3EInt16(2, 'CompressorSuctionSuperheat'),
        2572 : new E3.O3ERawCodec(4, 'ActualCompressorInletMassflow'),
        2573 : new E3.O3ERawCodec(2, 'CompressorOnTimer'),
        2574 : new E3.O3EInt16(8, 'NominalPowerElectricalHeater', {scale:1}),
        2575 : new E3.O3EInt16(2, 'RefrigerationCycleApplicationState'),
        2576 : new E3.O3ERawCodec(2, 'FuelCellTestModeOne'),
        2577 : new E3.O3ERawCodec(6, 'FuelCellTestModeTwo'),
        2578 : new E3.O3EInt8(1, 'RefrigerationCircuitDesiredOperatingMode'),
        2579 : new E3.O3ERawCodec(4, 'CompressorMinMaxAllowedPrimaryTemperatureHeating'),
        2581 : new E3.O3EInt16(2, 'CompressorCalculatedSetpointRps'),
        2582 : new E3.O3ERawCodec(2, 'CompressorOffTimer'),
        2583 : new E3.O3ERawCodec(15, 'OxygenProbeProcessValuesBurnerOne'),
        2584 : new E3.O3ERawCodec(15, 'OxygenProbeProcessValuesBurnerTwo'),
        2586 : new E3.O3ERawCodec(2, 'DigitalOutputCooling'),
        2590 : new E3.O3ERawCodec(8, 'HeatPumpCommonSettingsHeating'),
        2591 : new E3.O3ERawCodec(8, 'HeatPumpCommonSettingsCooling'),
        2592 : new E3.O3ERawCodec(4, 'ExpansionValveTheoreticalSetpoint'),
        2593 : new E3.O3ERawCodec(181, 'ProductMatrix'),
        2594 : new E3.O3ERawCodec(124, 'ElectricalPreHeaterMonthMatrix'),
        2595 : new E3.O3ERawCodec(96, 'ElectricalPreHeaterYearMatrix'),
        2598 : new E3.O3EByteVal(1, 'VentilationFanAssignmentAvailable'),
        2599 : new E3.O3EByteVal(1, 'VentilationFanAssignmentSwitch'),
        2600 : new E3.O3ERawCodec(2, 'ElectricalHeaterActivation'),
        2601 : new E3.O3ERawCodec(2, 'ElectricalHeaterVentilationConfiguration'),
        2602 : new E3.O3ERawCodec(10, 'PrimaryHeatExchangerStatus'),
        2603 : new E3.O3ERawCodec(4, 'PrimaryHeatExchangerCommonSettings'),
        2604 : new E3.O3EByteVal(1, 'LevelSwitchActivation'),
        2605 : new E3.O3EComplexType(4, 'QuickModeRuntime',[new E3.O3EInt16(2, 'NoiseReduced', {scale:1.0}), new E3.O3EInt16(2, 'Intensive', {scale:1.0})]),
        2606 : new E3.O3EByteVal(1, 'ExternalTriggerActivation'),
        2607 : new E3.O3EByteVal(1, 'ExternalTriggerSettings'),
        2608 : new E3.O3ERawCodec(28, 'FilterSettings'),
        2609 : new E3.O3ERawCodec(6, 'CommissioningStatus'),
        2610 : new E3.O3ERawCodec(1, 'SetDeliveryStateExpert'),
        2611 : new E3.O3ERawCodec(4, 'NominalThermalCapacityIndoorUnit'),
        2612 : new E3.O3ERawCodec(7, 'PrimarySourceCommonSettingsHeating'),
        2613 : new E3.O3ERawCodec(7, 'PrimarySourceCommonSettingsCooling'),
        2621 : new E3.O3EInt16(2, 'MaximumOperatingPressureActualTemperatureSetpoint'),
        2622 : new E3.O3EInt16(9, 'SeasonalCoefficientOfPerformaceHeating'),
        2623 : new E3.O3EInt16(9, 'SeasonalEnergyEfficiencyRatioCooling'),
        2624 : new E3.O3EInt16(9, 'SeasonalCoefficientOfPerformaceDomesticHotWater'),
        2625 : new E3.O3EInt16(9, 'SeasonalCoefficientOfPerformaceHeatingAndDomesticHotWater'),
        2626 : new E3.O3EInt16(4, 'MaximumPowerElectricalHeater', {scale:1}),
        2627 : new E3.O3EInt16(2, 'CompressorStartUpTimer'),
        2629 : new E3.O3EInt16(4, 'DesiredThermalCapacity', {scale:1}),
        2630 : new E3.O3ERawCodec(4, 'CompressorMinMaxSpeedHeating'),
        2631 : new E3.O3ERawCodec(4, 'CompressorMinMaxSpeedCooling'),
        2632 : new E3.O3ERawCodec(4, 'CompressorMinMaxSpeedDefrost'),
        2633 : new E3.O3ERawCodec(12, 'MaxSpeedNoiseReductionMode'),
        2634 : new E3.O3EByteVal(1, 'NoiseReductionMode'),
        2635 : new E3.O3ERawCodec(8, 'BurnerProcessDataFlags'),
        2636 : new E3.O3ERawCodec(8, 'BurnerTwoProcessDataFlags'),
        2637 : new E3.O3ERawCodec(8, 'BurnerThreeProcessDataFlags'),
        2638 : new E3.O3ERawCodec(4, 'SupportedCountryCodes'),
        2643 : new E3.O3ERawCodec(2, 'MaximumRechargePower'),
        2733 : new E3.O3ERawCodec(3, 'InstallationConfirmation'),
        2735 : new E3.O3EByteVal(1, 'FourThreeWayValveValveCurrentPosition'),
        2741 : new E3.O3ERawCodec(3, 'ComfortEnsuringMode'),
        2742 : new E3.O3EInt8(1, 'DiagnosticHydraulicFilterInterval'),
        2743 : new E3.O3EInt8(1, 'DiagnosticElectricalHeaterSafetyTemperatureLimiter'),
        2744 : new E3.O3EInt8(1, 'DiagnosticSecondaryFourThreeWayValve'),
        2745 : new E3.O3EInt8(1, 'DiagnosticHydraulicFilterContamination'),
        2746 : new E3.O3EInt8(1, 'DiagnosticHydraulicSafetyValve'),
        2748 : new E3.O3EInt8(1, 'DiagnosticControlledLowPressureShutDown'),
        2749 : new E3.O3EInt8(1, 'DiagnosticControlledHighPressureShutDown'),
        2750 : new E3.O3EInt8(1, 'DiagnosticHydraulicTemperatureSensors'),
        2751 : new E3.O3EInt8(1, 'DiagnosticElectronicExpansionValve'),
        2752 : new E3.O3EInt8(1, 'DiagnosticFanOperation'),
        2753 : new E3.O3EInt8(1, 'DiagnosticHeatExchangerConstraints'),
        2758 : new E3.O3ERawCodec(1, 'GasPressureSwitchErrorReaction'),
        2759 : new E3.O3ERawCodec(24, 'EnergyRecoveredCrossHeatExchanger'),
        2760 : new E3.O3ERawCodec(24, 'EnergyOwnConsumption'),
        2767 : new E3.O3EInt8(1, 'DiagnosticMonitoringPressureDrop'),
        2768 : new E3.O3EInt8(1, 'DiagnosticMonitoringPressurePeaks'),
        2772 : new E3.O3ERawCodec(124, 'EnergyRecoveredCrossHeatExchangerMonthMatrix'),
        2773 : new E3.O3ERawCodec(96, 'EnergyRecoveredCrossHeatExchangerYearMatrix'),
        2774 : new E3.O3ERawCodec(124, 'EnergyOwnConsumptionMonthMatrix'),
        2775 : new E3.O3ERawCodec(96, 'EnergyOwnConsumptionYearMatrix'),
        2776 : new E3.O3ERawCodec(181, 'ProductMatrixTwo'),
        2777 : new E3.O3ERawCodec(8, 'PrimaryBootLoaderVersion'),
        2778 : new E3.O3ERawCodec(2, 'ErrorMessageInputSelection'),
        2779 : new E3.O3ERawCodec(2, 'DeltaTemperaturePumpControlSetpoint'),
        2780 : new E3.O3ERawCodec(1, 'DomesticHotWaterFlowRangeDwellDuration'),
        2781 : new E3.O3ERawCodec(7, 'AirVolumeFlowSetpoint'),
        2782 : new E3.O3ERawCodec(24, 'AirVolumeFlowStatus'),
        2783 : new E3.O3ERawCodec(4, 'VentilationSelfCheckDuration'),
        2784 : new E3.O3EInt16(9, 'SecondaryHeatExchangerVaporPressureSensor', {scale:100}),
        2785 : new E3.O3ERawCodec(16, 'ElectricalHeaterStarts'),
        2786 : new E3.O3ERawCodec(2, 'ElectricalPreheaterCurrentPowerConsumption'),
        2791 : new E3.O3EInt8(5, 'CentralHeatingPumpStatus'),
        2792 : new E3.O3EInt8(5, 'MixerOneCircuitPumpStatus'),
        2793 : new E3.O3EInt8(5, 'MixerTwoCircuitPumpStatus'),
        2794 : new E3.O3EInt8(5, 'MixerThreeCircuitPumpStatus'),
        2795 : new E3.O3EInt8(5, 'MixerFourCircuitPumpStatus'),
        2796 : new E3.O3ERawCodec(2, 'ExternalHeaterConfiguration'),
        2797 : new E3.O3EByteVal(1, 'VentilationBypassFlapAvailableCount'),
        2798 : new E3.O3EByteVal(1, 'RelativeHumiditySensorSelection'),
        2799 : new E3.O3EByteVal(1, 'ElectricalHeatersShutdownDelay'),
        2800 : new E3.O3EByteVal(1, 'VentilationHeatExchangerType'),
        2801 : new E3.O3EByteVal(1, 'VentilationFanAssignmentSwitchManufacturing'),
        2802 : new E3.O3ERawCodec(6, 'InverterSelfTestStatus'),
        2804 : new E3.O3ERawCodec(151, 'InverterSelfTestResultTwo'),
        2805 : new E3.O3ERawCodec(151, 'InverterSelfTestResultThree'),
        2806 : new E3.O3EComplexType(2, 'RefrigerationCircuitOperationMode',[new E3.O3EByteVal(1,'Mode'),new E3.O3EByteVal(1,'State')]),
        2807 : new E3.O3ERawCodec(9, 'InverterHousingTemperature'),
        2808 : new E3.O3ERawCodec(9, 'InverterInternalPowerModuleTemperature'),
        2809 : new E3.O3ERawCodec(1, 'PumpMinSpeedConfiguration'),
        2810 : new E3.O3ERawCodec(1, 'CentralHeatingPumpFeedbackSignalHandlingMode'),
        2826 : new E3.O3ERawCodec(40, 'FuelCellNetworkSystemProtectionErrorHistory'),
        2827 : new E3.O3ERawCodec(48, 'FuelCellNetworkSystemProtectionParameters'),
        2828 : new E3.O3ERawCodec(2, 'FuelCellSdCardRecording'),
        2829 : new E3.O3ERawCodec(20, 'ProductIdentification'),
        2830 : new E3.O3ERawCodec(1, 'EmergencyMode'),
        2831 : new E3.O3ERawCodec(2, 'BivalenceControlAlternativeTemperature'),
        2832 : new E3.O3ERawCodec(4, 'BaseHeaterTimer'),
        2833 : new E3.O3EInt8(1, 'BaseHeaterTimerMode'),
        2834 : new E3.O3EInt16(2, 'BaseHeaterTimerDuration'),
        2835 : new E3.O3EInt16(2, 'BaseHeaterTemperatureThreshold'),
        2836 : new E3.O3EInt16(2, 'SecondaryHeatExchangerMinimumVolumeFlowThreshold'),
        2837 : new E3.O3EInt16(2, 'SecondaryHeatExchangerOptimumTemperatureSpreadExponent'),
        2838 : new E3.O3ERawCodec(4, 'SecondaryHeatExchangerOptimumTemperatureSpreadHeating'),
        2839 : new E3.O3ERawCodec(4, 'SecondaryHeatExchangerOptimumTemperatureSpreadCooling'),
        2840 : new E3.O3EInt16(2, 'SecondaryHeatExchangerOptimumVolumeFlowDefrost'),
        2842 : new E3.O3EInt16(2, 'SecondaryHeatExchangerHxSubcooling'),
        2843 : new E3.O3EInt16(2, 'SecondaryHeatExchangerMinimumVolumeFlow'),
        2844 : new E3.O3EInt16(2, 'SecondaryHeatExchangerMinimumOutletTemperature'),
        2845 : new E3.O3EInt16(2, 'SecondaryHeatExchangerMaximumOutletTemperature'),
        2847 : new E3.O3ERawCodec(8, 'CrankCaseHeaterStatistics'),
        2848 : new E3.O3EInt16(2, 'CrankCaseHeaterTemperatureStatistics'),
        2849 : new E3.O3ERawCodec(27, 'CrankCaseHeaterOnTimer'),
        2850 : new E3.O3ERawCodec(3, 'CrankCaseHeaterSensorErrorType'),
        2851 : new E3.O3EInt16(2, 'PreStartDuration'),
        2852 : new E3.O3EInt8(1, 'FanDuctHeater'),
        2853 : new E3.O3ERawCodec(2, 'ExternalHeaterTimeIntegralThershold'),
        2855 : new E3.O3EInt16(3, 'MixerOneCircuitFrostProtectionConfiguration', {signed:true, offset:1}),
        2856 : new E3.O3EInt16(3, 'MixerTwoCircuitFrostProtectionConfiguration', {signed:true, offset:1}),
        2857 : new E3.O3EInt16(3, 'MixerThreeCircuitFrostProtectionConfiguration', {signed:true, offset:1}),
        2858 : new E3.O3EInt16(3, 'MixerFourCircuitFrostProtectionConfiguration', {signed:true, offset:1}),
        2874 : new E3.O3EInt16(2, 'PrimarySourceRpsOne'),
        2875 : new E3.O3EInt16(2, 'PrimarySourceRpsTwo'),
        2876 : new E3.O3EInt16(2, 'PrimaryPumpCommonSetpoint'),
        2877 : new E3.O3EInt16(2, 'SuctionSuperheatSetpoint'),
        2878 : new E3.O3EInt16(2, 'SubcoolingSetpoint'),
        2879 : new E3.O3ERawCodec(2, 'MixerOneCircuitHeatingBlocked'),
        2880 : new E3.O3ERawCodec(2, 'MixerTwoCircuitHeatingBlocked'),
        2881 : new E3.O3ERawCodec(4, 'ExpansionValveOneTimer'),
        2882 : new E3.O3ERawCodec(4, 'ExpansionValveTwoTimer'),
        2883 : new E3.O3EInt16(2, 'ExpansionValveMaximumOperatingPressureTemperatureSetpoint'),
        2884 : new E3.O3EInt16(2, 'ExpansionValveOneStatus'),
        2885 : new E3.O3EInt16(2, 'ExpansionValveTwoStatus'),
        2886 : new E3.O3EInt16(2, 'RefrigerantCyclePostStopDuration'),
        2887 : new E3.O3EInt16(2, 'RefrigerantCycleAlarmPauseDuration'),
        2888 : new E3.O3EInt16(2, 'RefrigerantCyclePumpdownStoppingDelay'),
        2889 : new E3.O3ERawCodec(6, 'RefrigerantCycleTimers'),
        2890 : new E3.O3EInt16(2, 'RefrigerantCyclePumpdownHoldTimer'),
        2891 : new E3.O3ERawCodec(6, 'RefrigerantCycleDefrostTimers'),
        2892 : new E3.O3EInt16(2, 'RefrigerantCycleTransitionToHeatingTimer'),
        2893 : new E3.O3EInt16(2, 'RefrigerantCycleTransitionToCoolingTimer'),
        2894 : new E3.O3EByteVal(1, 'RefrigerantCycleAvailability'),
        2895 : new E3.O3ERawCodec(5, 'PrimaryPumpSettings'),
        2896 : new E3.O3EInt8(1, 'PrimaryPumpOneStatus'),
        2897 : new E3.O3EInt8(1, 'PrimaryPumpTwoStatus'),
        2908 : new E3.O3EInt8(1, 'InverterModuleType'),
        2909 : new E3.O3ERawCodec(4, 'CompressorMinMaxRequestedSecondaryReturnTemperatureCooling'),
        2910 : new E3.O3ERawCodec(4, 'CompressorMinMaxRequestedSecondaryReturnTemperaturePreStartDefrost'),
        2911 : new E3.O3EInt16(2, 'CompressorMaximumRequestedSecondaryReturnTempDefrost'),
        2912 : new E3.O3EInt16(2, 'CompressorMaximumDischargeTemperature'),
        2913 : new E3.O3EInt16(2, 'CompressorMinimumAllowedSecondaryOutletTemperatureHeating'),
        2914 : new E3.O3ERawCodec(4, 'CompressorMinMaxAllowedPrimaryTemperatureCooling'),
        2915 : new E3.O3EInt16(2, 'CompressorMaximumCondensingPressure'),
        2916 : new E3.O3EInt16(2, 'CompressorMaximumEvaporatingPressure'),
        2917 : new E3.O3EInt16(2, 'CompressorMinimumEvaporatingPressureHeating'),
        2918 : new E3.O3EInt16(2, 'CompressorMinimumEvaporatingPressureCooling'),
        2920 : new E3.O3ERawCodec(2, 'ExternalHeaterSpecification'),
        2921 : new E3.O3ERawCodec(2, 'DiagnosticHydraulicFilterIntervalSettings'),
        2922 : new E3.O3ERawCodec(2, 'DiagnosticHydraulicFilterIntervalTemporalSettings'),
        2923 : new E3.O3ERawCodec(6, 'DiagnosticSecondaryFourThreeWayValveSettings'),
        2924 : new E3.O3ERawCodec(4, 'DiagnosticHydraulicFilterContaminationSettings'),
        2925 : new E3.O3ERawCodec(2, 'DiagnosticMonitoringPressurePeaksSettings'),
        2926 : new E3.O3ERawCodec(6, 'DiagnosticMonitoringPressureDropSettings'),
        2927 : new E3.O3EInt8(1, 'DiagnosticElectronicExpansionValveSettings'),
        2928 : new E3.O3EInt16(2, 'DiagnosticHeatExchangerConstraintsSettings'),
        2929 : new E3.O3EInt8(1, 'DiagnosticRefrigerantCircuitPressureSensors'),
        2930 : new E3.O3EInt8(1, 'DiagnosticRefrigerantCircuitFourTwoWayValve'),
        2931 : new E3.O3EInt8(1, 'DiagnosticRefrigerantCircuitTemperatureSensors'),
        2932 : new E3.O3ERawCodec(4, 'TimeCounterSinceLastReset'),
        2936 : new E3.O3ERawCodec(3, 'ElectricalEnergyStorageSystemState'),
        2937 : new E3.O3ERawCodec(2, 'SystemPumpConfiguration'),
        2938 : new E3.O3ERawCodec(4, 'CascadeSystemPump'),
        2939 : new E3.O3EInt16(2, 'PrimaryHeatExchangerLowEvaporatingTemperatureAlarmDelay'),
        2940 : new E3.O3ERawCodec(3, 'ExternalHeaterDelayTimer'),
        2942 : new E3.O3ERawCodec(137, 'ListOfLayerSettingServiceDevices'),
        2944 : new E3.O3EByteVal(1, 'NodeIdOnExternalCan'),
        2945 : new E3.O3ERawCodec(1, 'PointOfCommonCouplingEnergyMeterConnectedPhases'),
        2946 : new E3.O3ERawCodec(24, 'EnergyConsumptionElectricalPreHeater'),
        2947 : new E3.O3ERawCodec(5, 'SleepModePrevention'),
        2952 : new E3.O3ERawCodec(137, 'ListOfLayerSettingServiceDevicesTwo'),
        2953 : new E3.O3ERawCodec(10, 'CascadeSystemConfigurationArray'),
        2956 : new E3.O3EInt8(1, 'DeviceDigitalInputEightValue'),
        2957 : new E3.O3EInt8(1, 'DeviceDigitalInputNineValue'),
        2969 : new E3.O3EByteVal(1, 'ElectronicControlUnitSafeStateStatus'),
        2985 : new E3.O3ERawCodec(2, 'ExternalHeaterTemperatureSetpoint'),
        2986 : new E3.O3EByteVal(1, 'ExternalHeaterOperationState'),
        2987 : new E3.O3EInt8(1, 'RefrigerantCycleUnlock'),
        2999 : new E3.O3ERawCodec(16, 'ElectricalHeatersOperationHours'),
        3000 : new E3.O3ERawCodec(115, 'EcuResetInformationList'),
        3001 : new E3.O3ERawCodec(196, 'LowEvaporatingLowCondensingDriveDuration'),
        3002 : new E3.O3ERawCodec(196, 'MidEvaporatingLowCondensingDriveDuration'),
        3003 : new E3.O3ERawCodec(196, 'HighEvaporatingLowCondensingDriveDuration'),
        3004 : new E3.O3ERawCodec(196, 'LowEvaporatingHighCondensingDriveDuration'),
        3005 : new E3.O3ERawCodec(196, 'MidEvaporatingHighCondensingDriveDuration'),
        3006 : new E3.O3ERawCodec(196, 'HighEvaporatingHighCondensingDriveDuration'),
        3008 : new E3.O3EInt16(2, 'FanDuctHeaterOnDuration'),
        3009 : new E3.O3ERawCodec(4, 'FanDuctHeaterOnTimer'),
        3013 : new E3.O3ERawCodec(2, 'MixerHybridThreeWayValvePositionPercent'),
        3014 : new E3.O3EComplexType(9, 'OutdoorMiddleCoilTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        3015 : new E3.O3EComplexType(9, 'HeatSinkTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        3016 : new E3.O3EComplexType(9, 'HeatingBufferTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        3017 : new E3.O3EComplexType(9, 'CoolingBufferTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        3018 : new E3.O3EComplexType(9, 'HeatingCoolingBufferTemperatureSensor', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        3029 : new E3.O3EByteVal(1, 'DomesticHotWaterEfficiencyMode'),
        3030 : new E3.O3ERawCodec(2, 'DomesticHotWaterEfficiencyModeAvailability'),
        3031 : new E3.O3ERawCodec(2, 'ExternalHeater'),
        3032 : new E3.O3ERawCodec(2, 'PrimaryEnergyFactorElectricity'),
        3034 : new E3.O3EComplexType(9, 'DomesticHotWaterReturnTemperaturTankLoadSystem', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        3035 : new E3.O3EComplexType(9, 'DomesticHotWaterFlowTemperaturTankLoadSystem', [new E3.O3EInt16(2, 'Actual', {signed:true}), new E3.O3EInt16(2, 'Minimum', {signed:true}), new E3.O3EInt16(2, 'Maximum', {signed:true}), new E3.O3EInt16(2, 'Average', {signed:true}), new E3.O3EByteVal(1, 'Unknown')]),
        3036 : new E3.O3ERawCodec(2, 'PrimaryEnergyFactorExternalHeater'),
        3037 : new E3.O3ERawCodec(57, 'ElectricityPriceTimeScheduleMonday'),
        3038 : new E3.O3ERawCodec(57, 'ElectricityPriceTimeScheduleTuesday'),
        3039 : new E3.O3ERawCodec(57, 'ElectricityPriceTimeScheduleWednesday'),
        3040 : new E3.O3ERawCodec(57, 'ElectricityPriceTimeScheduleThursday'),
        3041 : new E3.O3ERawCodec(57, 'ElectricityPriceTimeScheduleFriday'),
        3042 : new E3.O3ERawCodec(57, 'ElectricityPriceTimeScheduleSaturday'),
        3043 : new E3.O3ERawCodec(57, 'ElectricityPriceTimeScheduleSunday'),
        3056 : new E3.O3EInt8(1, 'NarrowBandInternetOfThingsNetworkStatus'),
        3057 : new E3.O3EInt8(1, 'NarrowBandInternetOfThingsCloudStatus'),
        3066 : new E3.O3ERawCodec(4, 'DomesticHotWaterHighDemandDetection'),
        3067 : new E3.O3ERawCodec(9, 'AirVolumeFlowValue'),
        3068 : new E3.O3ERawCodec(2, 'DomesticHotWaterTemperatureSetpointComfort'),
        3069 : new E3.O3EByteVal(1, 'DomesticHotWaterSensorForDemand'),
        3070 : new E3.O3EByteVal(1, 'BufferTargetOperationMode'),
        3085 : new E3.O3ERawCodec(18, 'ElectricalEnergyStorageModuleOneInformation'),
        3086 : new E3.O3ERawCodec(18, 'ElectricalEnergyStorageModuleTwoInformation'),
        3087 : new E3.O3ERawCodec(18, 'ElectricalEnergyStorageModuleThreeInformation'),
        3088 : new E3.O3ERawCodec(18, 'ElectricalEnergyStorageModuleFourInformation'),
        3089 : new E3.O3ERawCodec(18, 'ElectricalEnergyStorageModuleFiveInformation'),
        3090 : new E3.O3ERawCodec(18, 'ElectricalEnergyStorageModuleSixInformation'),
        3091 : new E3.O3EByteVal(1, 'GatewayEthernetTwoEnable'),
        3092 : new E3.O3ERawCodec(21, 'GatewayEthernetTwoConfig'),
        3093 : new E3.O3ERawCodec(20, 'GatewayEthernetTwoIp'),
        3094 : new E3.O3EByteVal(1, 'GatewayEthernetTwoNetworkStatus'),
        3095 : new E3.O3ERawCodec(6, 'MacAddressLanTwo'),
        3096 : new E3.O3EByteVal(1, 'GatewayWifiStationEnable'),
        3097 : new E3.O3EByteVal(1, 'GatewayInternetAccess'),
        3098 : new E3.O3ERawCodec(2, 'ExternalHeaterTemperatureOffset'),
        3103 : new E3.O3ERawCodec(6, 'IsCountryModeLoadInformation'),
        3106 : new E3.O3ERawCodec(4, 'BufferMinimumMaximumSetTemperature'),
        3107 : new E3.O3ERawCodec(7, 'BatteryModuleExchangeAssistent'),
        3108 : new E3.O3ERawCodec(9, 'PhotovoltaicsActivePowerLimitationRampRate'),
        3109 : new E3.O3ERawCodec(8, 'PrimaryHeatExchangerBaseHeaterStatistical'),
        3113 : new E3.O3ERawCodec(8, 'DeviceDigitalOutputOneValueStatistical'),
        3114 : new E3.O3ERawCodec(8, 'DeviceDigitalOutputTwoValueStatistical'),
        3115 : new E3.O3ERawCodec(8, 'DeviceDigitalOutputThreeValueStatistical'),
        3116 : new E3.O3ERawCodec(8, 'DeviceDigitalOutputFourValueStatistical'),
        3117 : new E3.O3ERawCodec(8, 'DeviceDigitalOutputFiveValueStatistical'),
        3119 : new E3.O3ERawCodec(8, 'RefrigerantCircuitFourWayValveStatistical'),
        3120 : new E3.O3ERawCodec(8, 'CompressorCrankCaseHeaterStatistical'),
        3129 : new E3.O3ERawCodec(8, 'FanDuctHeaterStatistical'),
        3134 : new E3.O3ERawCodec(8, 'DomesticHotWaterCirculationPumpStatistical'),
        3146 : new E3.O3ERawCodec(8, 'ElectricalHeaterPhaseOneStatistical'),
        3147 : new E3.O3ERawCodec(8, 'ElectricalHeaterPhaseTwoStatistical'),
        3148 : new E3.O3ERawCodec(8, 'ElectricalHeaterPhaseThreeStatistical'),
        3155 : new E3.O3ERawCodec(5, 'DomesticHotWaterShiftLoadPumpStatus'),
        3156 : new E3.O3EByteVal(1, 'DomesticHotWaterShiftLoadPumpType'),
        3190 : new E3.O3EByteVal(1, 'RefrigerantCircuitFourWayValvePosition'),
        3191 : new E3.O3ERawCodec(199, 'ExtendedEventLoggingHistory'),
    }
};

module.exports = {
    dids
};